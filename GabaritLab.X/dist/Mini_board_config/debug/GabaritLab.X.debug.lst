

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 09:59:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F45K20 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  006F80                     __pidataCOMRAM:
    83                           	opt callstack 0
    84                           
    85                           ;initializer for _randx
    86  006F80  0001               	dw	1
    87  006F82  0000               	dw	0
    88                           
    89                           	psect	idataBANK0
    90  007114                     __pidataBANK0:
    91                           	opt callstack 0
    92                           
    93                           ;initializer for _matCGRAM
    94  007114  08                 	db	8
    95  007115  04                 	db	4
    96  007116  04                 	db	4
    97  007117  0A                 	db	10
    98  007118  11                 	db	17
    99  007119  1F                 	db	31
   100  00711A  11                 	db	17
   101  00711B  00                 	db	0
   102  00711C  04                 	db	4
   103  00711D  04                 	db	4
   104  00711E  1B                 	db	27
   105  00711F  04                 	db	4
   106  007120  04                 	db	4
   107  007121  1B                 	db	27
   108  007122  04                 	db	4
   109  007123  04                 	db	4
   110  007124  00                 	db	0
   111  007125  0E                 	db	14
   112  007126  1F                 	db	31
   113  007127  1F                 	db	31
   114  007128  1F                 	db	31
   115  007129  1F                 	db	31
   116  00712A  0E                 	db	14
   117  00712B  00                 	db	0
   118  00712C  00                 	db	0
   119  00712D  00                 	db	0
   120  00712E  15                 	db	21
   121  00712F  0E                 	db	14
   122  007130  1B                 	db	27
   123  007131  0E                 	db	14
   124  007132  15                 	db	21
   125  007133  00                 	db	0
   126  007134  08                 	db	8
   127  007135  04                 	db	4
   128  007136  1F                 	db	31
   129  007137  10                 	db	16
   130  007138  1E                 	db	30
   131  007139  10                 	db	16
   132  00713A  1F                 	db	31
   133  00713B  00                 	db	0
   134  00713C  04                 	db	4
   135  00713D  0A                 	db	10
   136  00713E  0E                 	db	14
   137  00713F  11                 	db	17
   138  007140  1F                 	db	31
   139  007141  10                 	db	16
   140  007142  0E                 	db	14
   141  007143  00                 	db	0
   142  007144  08                 	db	8
   143  007145  04                 	db	4
   144  007146  0E                 	db	14
   145  007147  01                 	db	1
   146  007148  0F                 	db	15
   147  007149  11                 	db	17
   148  00714A  0F                 	db	15
   149  00714B  00                 	db	0
   150  00714C  04                 	db	4
   151  00714D  0A                 	db	10
   152  00714E  0E                 	db	14
   153  00714F  01                 	db	1
   154  007150  0F                 	db	15
   155  007151  11                 	db	17
   156  007152  0F                 	db	15
   157  007153  00                 	db	0
   158  0000                     _PORTAbits	set	3968
   159  0000                     _PORTD	set	3971
   160  0000                     _ANSELbits	set	3966
   161  0000                     _TRISA	set	3986
   162  0000                     _ANSEL	set	3966
   163  0000                     _TRISB	set	3987
   164  0000                     _ANSELH	set	3967
   165  0000                     _TRISD	set	3989
   166  0000                     _PORTBbits	set	3969
   167  0000                     _TMR1	set	4046
   168  0000                     _ADCON2bits	set	4032
   169  0000                     _ADCON1	set	4033
   170  0000                     _T1CONbits	set	4045
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADCON0bits	set	4034
   173                           
   174                           ; #config settings
   175  0000                     
   176                           	psect	cinit
   177  00730E                     __pcinit:
   178                           	opt callstack 0
   179  00730E                     start_initialization:
   180                           	opt callstack 0
   181  00730E                     __initialization:
   182                           	opt callstack 0
   183                           
   184                           ; Initialize objects allocated to BANK0 (64 bytes)
   185                           ; load TBLPTR registers with __pidataBANK0
   186  00730E  0E14               	movlw	low __pidataBANK0
   187  007310  6EF6               	movwf	tblptrl,c
   188  007312  0E71               	movlw	high __pidataBANK0
   189  007314  6EF7               	movwf	tblptrh,c
   190  007316  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   191  007318  6EF8               	movwf	tblptru,c
   192  00731A  EE00  F0B4         	lfsr	0,__pdataBANK0
   193  00731E  EE10 F040          	lfsr	1,64
   194  007322                     copy_data0:
   195  007322  0009               	tblrd		*+
   196  007324  CFF5 FFEE          	movff	tablat,postinc0
   197  007328  50E5               	movf	postdec1,w,c
   198  00732A  50E1               	movf	fsr1l,w,c
   199  00732C  E1FA               	bnz	copy_data0
   200                           
   201                           ; Initialize objects allocated to COMRAM (4 bytes)
   202                           ; load TBLPTR registers with __pidataCOMRAM
   203  00732E  0E80               	movlw	low __pidataCOMRAM
   204  007330  6EF6               	movwf	tblptrl,c
   205  007332  0E6F               	movlw	high __pidataCOMRAM
   206  007334  6EF7               	movwf	tblptrh,c
   207  007336  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   208  007338  6EF8               	movwf	tblptru,c
   209  00733A  EE00  F025         	lfsr	0,__pdataCOMRAM
   210  00733E  EE10 F004          	lfsr	1,4
   211  007342                     copy_data1:
   212  007342  0009               	tblrd		*+
   213  007344  CFF5 FFEE          	movff	tablat,postinc0
   214  007348  50E5               	movf	postdec1,w,c
   215  00734A  50E1               	movf	fsr1l,w,c
   216  00734C  E1FA               	bnz	copy_data1
   217                           
   218                           ; Clear objects allocated to BANK1 (84 bytes)
   219  00734E  EE01  F000         	lfsr	0,__pbssBANK1
   220  007352  0E54               	movlw	84
   221  007354                     clear_0:
   222  007354  6AEE               	clrf	postinc0,c
   223  007356  06E8               	decf	wreg,f,c
   224  007358  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK0 (84 bytes)
   227  00735A  EE00  F060         	lfsr	0,__pbssBANK0
   228  00735E  0E54               	movlw	84
   229  007360                     clear_1:
   230  007360  6AEE               	clrf	postinc0,c
   231  007362  06E8               	decf	wreg,f,c
   232  007364  E1FD               	bnz	clear_1
   233  007366                     end_of_initialization:
   234                           	opt callstack 0
   235  007366                     __end_of__initialization:
   236                           	opt callstack 0
   237  007366  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238  007368  6EF8               	movwf	tblptru,c
   239  00736A  0100               	movlb	0
   240  00736C  EF52  F03A         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	dataCOMRAM
   243  000025                     __pdataCOMRAM:
   244                           	opt callstack 0
   245  000025                     _randx:
   246                           	opt callstack 0
   247  000025                     	ds	4
   248                           
   249                           	psect	bssBANK0
   250  000060                     __pbssBANK0:
   251                           	opt callstack 0
   252  000060                     _m_tabMines:
   253                           	opt callstack 0
   254  000060                     	ds	84
   255                           
   256                           	psect	dataBANK0
   257  0000B4                     __pdataBANK0:
   258                           	opt callstack 0
   259  0000B4                     _matCGRAM:
   260                           	opt callstack 0
   261  0000B4                     	ds	64
   262                           
   263                           	psect	bssBANK1
   264  000100                     __pbssBANK1:
   265                           	opt callstack 0
   266  000100                     _m_tabVue:
   267                           	opt callstack 0
   268  000100                     	ds	84
   269                           
   270                           	psect	cstackCOMRAM
   271  000001                     __pcstackCOMRAM:
   272                           	opt callstack 0
   273  000001                     ??_getAnalog:
   274  000001                     ??_lcd_ecrireDonnees:
   275  000001                     ??_lcd_busy:
   276  000001                     ?___wmul:
   277                           	opt callstack 0
   278  000001                     ?___lmul:
   279                           	opt callstack 0
   280  000001                     enleveTuilesAutour@y:
   281                           	opt callstack 0
   282  000001                     ___wmul@multiplier:
   283                           	opt callstack 0
   284  000001                     srand@x:
   285                           	opt callstack 0
   286  000001                     ___lmul@multiplier:
   287                           	opt callstack 0
   288                           
   289                           ; 4 bytes @ 0x0
   290  000001                     	ds	1
   291  000002                     ??_enleveTuilesAutour:
   292  000002                     getAnalog@canal:
   293                           	opt callstack 0
   294  000002                     lcd_ecrireDonnees@donnee:
   295                           	opt callstack 0
   296  000002                     lcd_busy@adresse:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x1
   300  000002                     	ds	1
   301  000003                     ??_lcd_resetSequence:
   302  000003                     lcd_wrCom@commande:
   303                           	opt callstack 0
   304  000003                     lcd_wrData@caractere:
   305                           	opt callstack 0
   306  000003                     ___wmul@multiplicand:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0x2
   310  000003                     	ds	1
   311  000004                     ??_lcd_initCGRam:
   312  000004                     lcd_gotoXY@y:
   313                           	opt callstack 0
   314  000004                     lcd_ecritChar@car:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0x3
   318  000004                     	ds	1
   319  000005                     lcd_gotoXY@x:
   320                           	opt callstack 0
   321  000005                     lcd_ecritChar@posRam:
   322                           	opt callstack 0
   323  000005                     ___wmul@product:
   324                           	opt callstack 0
   325  000005                     ___lmul@multiplicand:
   326                           	opt callstack 0
   327                           
   328                           ; 4 bytes @ 0x4
   329  000005                     	ds	1
   330  000006                     enleveTuilesAutour@x:
   331                           	opt callstack 0
   332  000006                     lcd_initCGRam@i:
   333                           	opt callstack 0
   334  000006                     deplace@px:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x5
   338  000006                     	ds	1
   339  000007                     ??_initTabVue:
   340  000007                     enleveTuilesAutour@colonne:
   341                           	opt callstack 0
   342  000007                     lcd_initCGRam@j:
   343                           	opt callstack 0
   344  000007                     calculToucheCombien@ligne:
   345                           	opt callstack 0
   346  000007                     lcd_putMessage@chaine:
   347                           	opt callstack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350  000007                     	ds	1
   351  000008                     enleveTuilesAutour@ligne:
   352                           	opt callstack 0
   353  000008                     deplace@py:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x7
   357  000008                     	ds	1
   358  000009                     lcd_putMessage@j:
   359                           	opt callstack 0
   360  000009                     initTabVue@j:
   361                           	opt callstack 0
   362  000009                     calculToucheCombien@colonne:
   363                           	opt callstack 0
   364  000009                     enleveTuilesAutour@i:
   365                           	opt callstack 0
   366  000009                     ___lmul@product:
   367                           	opt callstack 0
   368                           
   369                           ; 4 bytes @ 0x8
   370  000009                     	ds	1
   371  00000A                     ??_deplace:
   372  00000A                     afficheTabVue@i:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x9
   376  00000A                     	ds	1
   377  00000B                     ??_calculToucheCombien:
   378  00000B                     initTabVue@i:
   379                           	opt callstack 0
   380  00000B                     deplace@aX:
   381                           	opt callstack 0
   382  00000B                     enleveTuilesAutour@j:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0xA
   386  00000B                     	ds	2
   387  00000D                     ?_rand:
   388                           	opt callstack 0
   389  00000D                     demine@y:
   390                           	opt callstack 0
   391  00000D                     deplace@aY:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0xC
   395  00000D                     	ds	1
   396  00000E                     ??_demine:
   397  00000E                     calculToucheCombien@total:
   398                           	opt callstack 0
   399                           
   400                           ; 1 bytes @ 0xD
   401  00000E                     	ds	1
   402  00000F                     ?___awmod:
   403                           	opt callstack 0
   404  00000F                     calculToucheCombien@x:
   405                           	opt callstack 0
   406  00000F                     ___awmod@dividend:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0xE
   410  00000F                     	ds	2
   411  000011                     calculToucheCombien@y:
   412                           	opt callstack 0
   413  000011                     ___awmod@divisor:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x10
   417  000011                     	ds	1
   418  000012                     demine@x:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x11
   422  000012                     	ds	1
   423  000013                     ___awmod@counter:
   424                           	opt callstack 0
   425  000013                     calculToucheCombien@i:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x12
   429  000013                     	ds	1
   430  000014                     ___awmod@sign:
   431                           	opt callstack 0
   432                           
   433                           ; 1 bytes @ 0x13
   434  000014                     	ds	1
   435  000015                     rempliMines@nb:
   436                           	opt callstack 0
   437  000015                     calculToucheCombien@j:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x14
   441  000015                     	ds	2
   442  000017                     ??_rempliMines:
   443  000017                     ??_metToucheCombien:
   444                           
   445                           ; 1 bytes @ 0x16
   446  000017                     	ds	3
   447  00001A                     rempliMines@i_407:
   448                           	opt callstack 0
   449  00001A                     metToucheCombien@i:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x19
   453  00001A                     	ds	2
   454  00001C                     rempliMines@col:
   455                           	opt callstack 0
   456  00001C                     metToucheCombien@j:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x1B
   460  00001C                     	ds	1
   461  00001D                     rempliMines@ligne:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0x1C
   465  00001D                     	ds	1
   466  00001E                     rempliMines@i:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x1D
   470  00001E                     	ds	2
   471  000020                     rempliMines@j:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x1F
   475  000020                     	ds	2
   476  000022                     ??_main:
   477                           
   478                           ; 1 bytes @ 0x21
   479  000022                     	ds	1
   480  000023                     main@x:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x22
   484  000023                     	ds	1
   485  000024                     main@y:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0x23
   489  000024                     	ds	1
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 54 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  y               1   35[COMRAM] unsigned char 
   501 ;;  x               1   34[COMRAM] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:         2       0       0       0       0       0       0
   513 ;;      Temps:          1       0       0       0       0       0       0
   514 ;;      Totals:         3       0       0       0       0       0       0
   515 ;;Total ram usage:        3 bytes
   516 ;; Hardware stack levels required when called:    7
   517 ;; This function calls:
   518 ;;		_afficheTabVue
   519 ;;		_demine
   520 ;;		_deplace
   521 ;;		_initTabVue
   522 ;;		_initialisation
   523 ;;		_lcd_curseurHome
   524 ;;		_lcd_effaceAffichage
   525 ;;		_lcd_init
   526 ;;		_metToucheCombien
   527 ;;		_rempliMines
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text0
   534  0074A4                     __ptext0:
   535                           	opt callstack 0
   536  0074A4                     _main:
   537                           	opt callstack 24
   538  0074A4                     
   539                           ;main.c: 56: char x = 1;
   540  0074A4  0E01               	movlw	1
   541  0074A6  6E23               	movwf	main@x^0,c
   542                           
   543                           ;main.c: 57: char y = 1;
   544  0074A8  0E01               	movlw	1
   545  0074AA  6E24               	movwf	main@y^0,c
   546  0074AC                     
   547                           ;main.c: 59: initialisation();
   548  0074AC  EC37  F038         	call	_initialisation	;wreg free
   549  0074B0                     
   550                           ;main.c: 60: lcd_init();
   551  0074B0  EC0C  F038         	call	_lcd_init	;wreg free
   552  0074B4                     
   553                           ;main.c: 62: lcd_effaceAffichage();
   554  0074B4  ECCD  F037         	call	_lcd_effaceAffichage	;wreg free
   555  0074B8                     
   556                           ;main.c: 63: lcd_curseurHome();
   557  0074B8  ECC9  F037         	call	_lcd_curseurHome	;wreg free
   558  0074BC                     
   559                           ;main.c: 65: initTabVue();
   560  0074BC  ECDD  F03A         	call	_initTabVue	;wreg free
   561  0074C0                     
   562                           ;main.c: 66: rempliMines(15);
   563  0074C0  0E00               	movlw	0
   564  0074C2  6E16               	movwf	(rempliMines@nb+1)^0,c
   565  0074C4  0E0F               	movlw	15
   566  0074C6  6E15               	movwf	rempliMines@nb^0,c
   567  0074C8  EC85  F03C         	call	_rempliMines	;wreg free
   568  0074CC                     
   569                           ;main.c: 67: metToucheCombien();
   570  0074CC  EC8A  F03B         	call	_metToucheCombien	;wreg free
   571  0074D0                     
   572                           ;main.c: 68: afficheTabVue();
   573  0074D0  ECF9  F038         	call	_afficheTabVue	;wreg free
   574  0074D4                     l2136:
   575                           
   576                           ;main.c: 71: {;main.c: 72: deplace(&x, &y);
   577  0074D4  0E23               	movlw	low main@x
   578  0074D6  6E06               	movwf	deplace@px^0,c
   579  0074D8  0E00               	movlw	high main@x
   580  0074DA  6E07               	movwf	(deplace@px+1)^0,c
   581  0074DC  0E24               	movlw	low main@y
   582  0074DE  6E08               	movwf	deplace@py^0,c
   583  0074E0  0E00               	movlw	high main@y
   584  0074E2  6E09               	movwf	(deplace@py+1)^0,c
   585  0074E4  ECC1  F03D         	call	_deplace	;wreg free
   586  0074E8                     
   587                           ;main.c: 73: _delay((unsigned long)((100)*(1000000/4000.0)));
   588  0074E8  0E21               	movlw	33
   589  0074EA  6E22               	movwf	??_main^0,c
   590  0074EC  0E76               	movlw	118
   591  0074EE                     u1047:
   592  0074EE  2EE8               	decfsz	wreg,f,c
   593  0074F0  D7FE               	bra	u1047
   594  0074F2  2E22               	decfsz	??_main^0,f,c
   595  0074F4  D7FC               	bra	u1047
   596  0074F6  F000 F000          	nop2	
   597  0074FA                     
   598                           ;main.c: 74: if(PORTBbits.RB1 == 0){
   599  0074FA  B281               	btfsc	129,1,c	;volatile
   600  0074FC  EF82  F03A         	goto	u1021
   601  007500  EF84  F03A         	goto	u1020
   602  007504                     u1021:
   603  007504  EF6A  F03A         	goto	l2136
   604  007508                     u1020:
   605  007508                     
   606                           ;main.c: 75: demine(x, y);
   607  007508  C024  F00D         	movff	main@y,demine@y
   608  00750C  5023               	movf	main@x^0,w,c
   609  00750E  ECF9  F03B         	call	_demine
   610  007512  EF6A  F03A         	goto	l2136
   611  007516  EF00  F000         	goto	start
   612  00751A                     __end_of_main:
   613                           	opt callstack 0
   614                           
   615 ;; *************** function _rempliMines *****************
   616 ;; Defined at:
   617 ;;		line 119 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  nb              2   20[COMRAM] int 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  j               2   31[COMRAM] int 
   622 ;;  i               2   25[COMRAM] int 
   623 ;;  i               2   29[COMRAM] int 
   624 ;;  ligne           1   28[COMRAM] unsigned char 
   625 ;;  col             1   27[COMRAM] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   635 ;;      Params:         2       0       0       0       0       0       0
   636 ;;      Locals:         8       0       0       0       0       0       0
   637 ;;      Temps:          3       0       0       0       0       0       0
   638 ;;      Totals:        13       0       0       0       0       0       0
   639 ;;Total ram usage:       13 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		___awmod
   644 ;;		___wmul
   645 ;;		_rand
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text1
   652  00790A                     __ptext1:
   653                           	opt callstack 0
   654  00790A                     _rempliMines:
   655                           	opt callstack 28
   656  00790A                     
   657                           ;main.c: 121: char ligne = 0;
   658  00790A  0E00               	movlw	0
   659  00790C  6E1D               	movwf	rempliMines@ligne^0,c
   660                           
   661                           ;main.c: 123: for(int i = 0; i < 20; i++){
   662  00790E  0E00               	movlw	0
   663  007910  6E1F               	movwf	(rempliMines@i+1)^0,c
   664  007912  0E00               	movlw	0
   665  007914  6E1E               	movwf	rempliMines@i^0,c
   666  007916                     l1990:
   667                           
   668                           ;main.c: 124: for(int j = 0; j < 4; j++){
   669  007916  0E00               	movlw	0
   670  007918  6E21               	movwf	(rempliMines@j+1)^0,c
   671  00791A  0E00               	movlw	0
   672  00791C  6E20               	movwf	rempliMines@j^0,c
   673  00791E                     l1996:
   674                           
   675                           ;main.c: 125: m_tabMines[j][i] = 32;
   676  00791E  C020  F001         	movff	rempliMines@j,___wmul@multiplier
   677  007922  C021  F002         	movff	rempliMines@j+1,___wmul@multiplier+1
   678  007926  0E00               	movlw	0
   679  007928  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   680  00792A  0E15               	movlw	21
   681  00792C  6E03               	movwf	___wmul@multiplicand^0,c
   682  00792E  ECE5  F037         	call	___wmul	;wreg free
   683  007932  0E60               	movlw	low _m_tabMines
   684  007934  6E17               	movwf	??_rempliMines^0,c
   685  007936  0E00               	movlw	high _m_tabMines
   686  007938  6E18               	movwf	(??_rempliMines+1)^0,c
   687  00793A  5001               	movf	?___wmul^0,w,c
   688  00793C  2617               	addwf	??_rempliMines^0,f,c
   689  00793E  5002               	movf	(?___wmul+1)^0,w,c
   690  007940  2218               	addwfc	(??_rempliMines+1)^0,f,c
   691  007942  501E               	movf	rempliMines@i^0,w,c
   692  007944  2417               	addwf	??_rempliMines^0,w,c
   693  007946  6ED9               	movwf	fsr2l,c
   694  007948  501F               	movf	(rempliMines@i+1)^0,w,c
   695  00794A  2018               	addwfc	(??_rempliMines+1)^0,w,c
   696  00794C  6EDA               	movwf	fsr2h,c
   697  00794E  0E20               	movlw	32
   698  007950  6EDF               	movwf	indf2,c
   699  007952  4A20               	infsnz	rempliMines@j^0,f,c
   700  007954  2A21               	incf	(rempliMines@j+1)^0,f,c
   701  007956  BE21               	btfsc	(rempliMines@j+1)^0,7,c
   702  007958  EFB7  F03C         	goto	u821
   703  00795C  5021               	movf	(rempliMines@j+1)^0,w,c
   704  00795E  E109               	bnz	u820
   705  007960  0E04               	movlw	4
   706  007962  5C20               	subwf	rempliMines@j^0,w,c
   707  007964  A0D8               	btfss	status,0,c
   708  007966  EFB7  F03C         	goto	u821
   709  00796A  EFB9  F03C         	goto	u820
   710  00796E                     u821:
   711  00796E  EF8F  F03C         	goto	l1996
   712  007972                     u820:
   713  007972  4A1E               	infsnz	rempliMines@i^0,f,c
   714  007974  2A1F               	incf	(rempliMines@i+1)^0,f,c
   715  007976  BE1F               	btfsc	(rempliMines@i+1)^0,7,c
   716  007978  EFC7  F03C         	goto	u831
   717  00797C  501F               	movf	(rempliMines@i+1)^0,w,c
   718  00797E  E109               	bnz	u830
   719  007980  0E14               	movlw	20
   720  007982  5C1E               	subwf	rempliMines@i^0,w,c
   721  007984  A0D8               	btfss	status,0,c
   722  007986  EFC7  F03C         	goto	u831
   723  00798A  EFC9  F03C         	goto	u830
   724  00798E                     u831:
   725  00798E  EF8B  F03C         	goto	l1990
   726  007992                     u830:
   727  007992                     
   728                           ;main.c: 126: };main.c: 127: };main.c: 129: for(int i = 0; i < nb; i++){
   729  007992  0E00               	movlw	0
   730  007994  6E1B               	movwf	(rempliMines@i_407+1)^0,c
   731  007996  0E00               	movlw	0
   732  007998  6E1A               	movwf	rempliMines@i_407^0,c
   733  00799A  EF0F  F03D         	goto	l2016
   734  00799E                     l2008:
   735                           
   736                           ;main.c: 131: col = rand()%20;
   737  00799E  ECD0  F038         	call	_rand	;wreg free
   738  0079A2  C00D  F00F         	movff	?_rand,___awmod@dividend
   739  0079A6  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
   740  0079AA  0E00               	movlw	0
   741  0079AC  6E12               	movwf	(___awmod@divisor+1)^0,c
   742  0079AE  0E14               	movlw	20
   743  0079B0  6E11               	movwf	___awmod@divisor^0,c
   744  0079B2  EC32  F03B         	call	___awmod	;wreg free
   745  0079B6  500F               	movf	?___awmod^0,w,c
   746  0079B8  6E1C               	movwf	rempliMines@col^0,c
   747                           
   748                           ;main.c: 132: ligne = rand()%4;
   749  0079BA  ECD0  F038         	call	_rand	;wreg free
   750  0079BE  500D               	movf	?_rand^0,w,c
   751  0079C0  0B03               	andlw	3
   752  0079C2  6E1D               	movwf	rempliMines@ligne^0,c
   753  0079C4                     
   754                           ;main.c: 133: }while(m_tabMines[ligne][col] != 32);
   755  0079C4  501D               	movf	rempliMines@ligne^0,w,c
   756  0079C6  0D15               	mullw	21
   757  0079C8  0E60               	movlw	low _m_tabMines
   758  0079CA  6E17               	movwf	??_rempliMines^0,c
   759  0079CC  0E00               	movlw	high _m_tabMines
   760  0079CE  6E18               	movwf	(??_rempliMines+1)^0,c
   761  0079D0  50F3               	movf	243,w,c
   762  0079D2  2617               	addwf	??_rempliMines^0,f,c
   763  0079D4  50F4               	movf	244,w,c
   764  0079D6  2218               	addwfc	(??_rempliMines+1)^0,f,c
   765  0079D8  501C               	movf	rempliMines@col^0,w,c
   766  0079DA  2417               	addwf	??_rempliMines^0,w,c
   767  0079DC  6ED9               	movwf	fsr2l,c
   768  0079DE  0E00               	movlw	0
   769  0079E0  2018               	addwfc	(??_rempliMines+1)^0,w,c
   770  0079E2  6EDA               	movwf	fsr2h,c
   771  0079E4  0E20               	movlw	32
   772  0079E6  18DE               	xorwf	postinc2,w,c
   773  0079E8  A4D8               	btfss	status,2,c
   774  0079EA  EFF9  F03C         	goto	u841
   775  0079EE  EFFB  F03C         	goto	u840
   776  0079F2                     u841:
   777  0079F2  EFCF  F03C         	goto	l2008
   778  0079F6                     u840:
   779  0079F6                     
   780                           ;main.c: 134: m_tabMines[ligne][col] = 3;
   781  0079F6  501D               	movf	rempliMines@ligne^0,w,c
   782  0079F8  0D15               	mullw	21
   783  0079FA  0E60               	movlw	low _m_tabMines
   784  0079FC  6E17               	movwf	??_rempliMines^0,c
   785  0079FE  0E00               	movlw	high _m_tabMines
   786  007A00  6E18               	movwf	(??_rempliMines+1)^0,c
   787  007A02  50F3               	movf	243,w,c
   788  007A04  2617               	addwf	??_rempliMines^0,f,c
   789  007A06  50F4               	movf	244,w,c
   790  007A08  2218               	addwfc	(??_rempliMines+1)^0,f,c
   791  007A0A  501C               	movf	rempliMines@col^0,w,c
   792  007A0C  2417               	addwf	??_rempliMines^0,w,c
   793  007A0E  6ED9               	movwf	fsr2l,c
   794  007A10  0E00               	movlw	0
   795  007A12  2018               	addwfc	(??_rempliMines+1)^0,w,c
   796  007A14  6EDA               	movwf	fsr2h,c
   797  007A16  0E03               	movlw	3
   798  007A18  6EDF               	movwf	indf2,c
   799  007A1A  4A1A               	infsnz	rempliMines@i_407^0,f,c
   800  007A1C  2A1B               	incf	(rempliMines@i_407+1)^0,f,c
   801  007A1E                     l2016:
   802  007A1E  5015               	movf	rempliMines@nb^0,w,c
   803  007A20  5C1A               	subwf	rempliMines@i_407^0,w,c
   804  007A22  501B               	movf	(rempliMines@i_407+1)^0,w,c
   805  007A24  0A80               	xorlw	128
   806  007A26  6E17               	movwf	??_rempliMines^0,c
   807  007A28  5016               	movf	(rempliMines@nb+1)^0,w,c
   808  007A2A  0A80               	xorlw	128
   809  007A2C  5817               	subwfb	??_rempliMines^0,w,c
   810  007A2E  A0D8               	btfss	status,0,c
   811  007A30  EF1C  F03D         	goto	u851
   812  007A34  EF1E  F03D         	goto	u850
   813  007A38                     u851:
   814  007A38  EFCF  F03C         	goto	l2008
   815  007A3C                     u850:
   816  007A3C  0012               	return		;funcret
   817  007A3E                     __end_of_rempliMines:
   818                           	opt callstack 0
   819                           
   820 ;; *************** function _rand *****************
   821 ;; Defined at:
   822 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  2   12[COMRAM] int 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   836 ;;      Params:         2       0       0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0
   839 ;;      Totals:         2       0       0       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		___lmul
   845 ;; This function is called by:
   846 ;;		_rempliMines
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text2
   851  0071A0                     __ptext2:
   852                           	opt callstack 0
   853  0071A0                     _rand:
   854                           	opt callstack 28
   855  0071A0  C025  F001         	movff	_randx,___lmul@multiplier
   856  0071A4  C026  F002         	movff	_randx+1,___lmul@multiplier+1
   857  0071A8  C027  F003         	movff	_randx+2,___lmul@multiplier+2
   858  0071AC  C028  F004         	movff	_randx+3,___lmul@multiplier+3
   859  0071B0  0E6D               	movlw	109
   860  0071B2  6E05               	movwf	___lmul@multiplicand^0,c
   861  0071B4  0E4E               	movlw	78
   862  0071B6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   863  0071B8  0EC6               	movlw	198
   864  0071BA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   865  0071BC  0E41               	movlw	65
   866  0071BE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   867  0071C0  EC1D  F03A         	call	___lmul	;wreg free
   868  0071C4  C001  F025         	movff	?___lmul,_randx
   869  0071C8  C002  F026         	movff	?___lmul+1,_randx+1
   870  0071CC  C003  F027         	movff	?___lmul+2,_randx+2
   871  0071D0  C004  F028         	movff	?___lmul+3,_randx+3
   872  0071D4  0E39               	movlw	57
   873  0071D6  2625               	addwf	_randx^0,f,c
   874  0071D8  0E30               	movlw	48
   875  0071DA  2226               	addwfc	(_randx+1)^0,f,c
   876  0071DC  0E00               	movlw	0
   877  0071DE  2227               	addwfc	(_randx+2)^0,f,c
   878  0071E0  0E00               	movlw	0
   879  0071E2  2228               	addwfc	(_randx+3)^0,f,c
   880  0071E4  0EFF               	movlw	255
   881  0071E6  1427               	andwf	(_randx+2)^0,w,c
   882  0071E8  6E0D               	movwf	?_rand^0,c
   883  0071EA  0E7F               	movlw	127
   884  0071EC  1428               	andwf	(_randx+3)^0,w,c
   885  0071EE  6E0E               	movwf	(?_rand+1)^0,c
   886  0071F0  0012               	return		;funcret
   887  0071F2                     __end_of_rand:
   888                           	opt callstack 0
   889                           
   890 ;; *************** function ___lmul *****************
   891 ;; Defined at:
   892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  multiplier      4    0[COMRAM] unsigned long 
   895 ;;  multiplicand    4    4[COMRAM] unsigned long 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  product         4    8[COMRAM] unsigned long 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  4    0[COMRAM] unsigned long 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   907 ;;      Params:         8       0       0       0       0       0       0
   908 ;;      Locals:         4       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0
   910 ;;      Totals:        12       0       0       0       0       0       0
   911 ;;Total ram usage:       12 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_rand
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text3
   921  00743A                     __ptext3:
   922                           	opt callstack 0
   923  00743A                     ___lmul:
   924                           	opt callstack 28
   925  00743A  0E00               	movlw	0
   926  00743C  6E09               	movwf	___lmul@product^0,c
   927  00743E  0E00               	movlw	0
   928  007440  6E0A               	movwf	(___lmul@product+1)^0,c
   929  007442  0E00               	movlw	0
   930  007444  6E0B               	movwf	(___lmul@product+2)^0,c
   931  007446  0E00               	movlw	0
   932  007448  6E0C               	movwf	(___lmul@product+3)^0,c
   933  00744A                     l1738:
   934  00744A  A001               	btfss	___lmul@multiplier^0,0,c
   935  00744C  EF2A  F03A         	goto	u571
   936  007450  EF2C  F03A         	goto	u570
   937  007454                     u571:
   938  007454  EF34  F03A         	goto	l1742
   939  007458                     u570:
   940  007458  5005               	movf	___lmul@multiplicand^0,w,c
   941  00745A  2609               	addwf	___lmul@product^0,f,c
   942  00745C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
   943  00745E  220A               	addwfc	(___lmul@product+1)^0,f,c
   944  007460  5007               	movf	(___lmul@multiplicand+2)^0,w,c
   945  007462  220B               	addwfc	(___lmul@product+2)^0,f,c
   946  007464  5008               	movf	(___lmul@multiplicand+3)^0,w,c
   947  007466  220C               	addwfc	(___lmul@product+3)^0,f,c
   948  007468                     l1742:
   949  007468  90D8               	bcf	status,0,c
   950  00746A  3605               	rlcf	___lmul@multiplicand^0,f,c
   951  00746C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
   952  00746E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
   953  007470  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
   954  007472  90D8               	bcf	status,0,c
   955  007474  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
   956  007476  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
   957  007478  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
   958  00747A  3201               	rrcf	___lmul@multiplier^0,f,c
   959  00747C  5001               	movf	___lmul@multiplier^0,w,c
   960  00747E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
   961  007480  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
   962  007482  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
   963  007484  A4D8               	btfss	status,2,c
   964  007486  EF47  F03A         	goto	u581
   965  00748A  EF49  F03A         	goto	u580
   966  00748E                     u581:
   967  00748E  EF25  F03A         	goto	l1738
   968  007492                     u580:
   969  007492  C009  F001         	movff	___lmul@product,?___lmul
   970  007496  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   971  00749A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   972  00749E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   973  0074A2  0012               	return		;funcret
   974  0074A4                     __end_of___lmul:
   975                           	opt callstack 0
   976                           
   977 ;; *************** function ___awmod *****************
   978 ;; Defined at:
   979 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  dividend        2   14[COMRAM] int 
   982 ;;  divisor         2   16[COMRAM] int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  sign            1   19[COMRAM] unsigned char 
   985 ;;  counter         1   18[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2   14[COMRAM] int 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         4       0       0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         6       0       0       0       0       0       0
   999 ;;Total ram usage:        6 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_rempliMines
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text4
  1009  007664                     __ptext4:
  1010                           	opt callstack 0
  1011  007664                     ___awmod:
  1012                           	opt callstack 29
  1013  007664  0E00               	movlw	0
  1014  007666  6E14               	movwf	___awmod@sign^0,c
  1015  007668  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  1016  00766A  EF3B  F03B         	goto	u740
  1017  00766E  EF39  F03B         	goto	u741
  1018  007672                     u741:
  1019  007672  EF41  F03B         	goto	l1908
  1020  007676                     u740:
  1021  007676  6C0F               	negf	___awmod@dividend^0,c
  1022  007678  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1023  00767A  B0D8               	btfsc	status,0,c
  1024  00767C  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1025  00767E  0E01               	movlw	1
  1026  007680  6E14               	movwf	___awmod@sign^0,c
  1027  007682                     l1908:
  1028  007682  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  1029  007684  EF48  F03B         	goto	u750
  1030  007688  EF46  F03B         	goto	u751
  1031  00768C                     u751:
  1032  00768C  EF4C  F03B         	goto	l1912
  1033  007690                     u750:
  1034  007690  6C11               	negf	___awmod@divisor^0,c
  1035  007692  1E12               	comf	(___awmod@divisor+1)^0,f,c
  1036  007694  B0D8               	btfsc	status,0,c
  1037  007696  2A12               	incf	(___awmod@divisor+1)^0,f,c
  1038  007698                     l1912:
  1039  007698  5011               	movf	___awmod@divisor^0,w,c
  1040  00769A  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  1041  00769C  B4D8               	btfsc	status,2,c
  1042  00769E  EF53  F03B         	goto	u761
  1043  0076A2  EF55  F03B         	goto	u760
  1044  0076A6                     u761:
  1045  0076A6  EF79  F03B         	goto	l1928
  1046  0076AA                     u760:
  1047  0076AA  0E01               	movlw	1
  1048  0076AC  6E13               	movwf	___awmod@counter^0,c
  1049  0076AE  EF5D  F03B         	goto	l1918
  1050  0076B2                     l1916:
  1051  0076B2  90D8               	bcf	status,0,c
  1052  0076B4  3611               	rlcf	___awmod@divisor^0,f,c
  1053  0076B6  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  1054  0076B8  2A13               	incf	___awmod@counter^0,f,c
  1055  0076BA                     l1918:
  1056  0076BA  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  1057  0076BC  EF62  F03B         	goto	u771
  1058  0076C0  EF64  F03B         	goto	u770
  1059  0076C4                     u771:
  1060  0076C4  EF59  F03B         	goto	l1916
  1061  0076C8                     u770:
  1062  0076C8                     l1920:
  1063  0076C8  5011               	movf	___awmod@divisor^0,w,c
  1064  0076CA  5C0F               	subwf	___awmod@dividend^0,w,c
  1065  0076CC  5012               	movf	(___awmod@divisor+1)^0,w,c
  1066  0076CE  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  1067  0076D0  A0D8               	btfss	status,0,c
  1068  0076D2  EF6D  F03B         	goto	u781
  1069  0076D6  EF6F  F03B         	goto	u780
  1070  0076DA                     u781:
  1071  0076DA  EF73  F03B         	goto	l1924
  1072  0076DE                     u780:
  1073  0076DE  5011               	movf	___awmod@divisor^0,w,c
  1074  0076E0  5E0F               	subwf	___awmod@dividend^0,f,c
  1075  0076E2  5012               	movf	(___awmod@divisor+1)^0,w,c
  1076  0076E4  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  1077  0076E6                     l1924:
  1078  0076E6  90D8               	bcf	status,0,c
  1079  0076E8  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  1080  0076EA  3211               	rrcf	___awmod@divisor^0,f,c
  1081  0076EC  2E13               	decfsz	___awmod@counter^0,f,c
  1082  0076EE  EF64  F03B         	goto	l1920
  1083  0076F2                     l1928:
  1084  0076F2  5014               	movf	___awmod@sign^0,w,c
  1085  0076F4  B4D8               	btfsc	status,2,c
  1086  0076F6  EF7F  F03B         	goto	u791
  1087  0076FA  EF81  F03B         	goto	u790
  1088  0076FE                     u791:
  1089  0076FE  EF85  F03B         	goto	l1932
  1090  007702                     u790:
  1091  007702  6C0F               	negf	___awmod@dividend^0,c
  1092  007704  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1093  007706  B0D8               	btfsc	status,0,c
  1094  007708  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1095  00770A                     l1932:
  1096  00770A  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1097  00770E  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1098  007712  0012               	return		;funcret
  1099  007714                     __end_of___awmod:
  1100                           	opt callstack 0
  1101                           
  1102 ;; *************** function _metToucheCombien *****************
  1103 ;; Defined at:
  1104 ;;		line 147 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  j               2   27[COMRAM] int 
  1109 ;;  i               2   25[COMRAM] int 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1119 ;;      Params:         0       0       0       0       0       0       0
  1120 ;;      Locals:         4       0       0       0       0       0       0
  1121 ;;      Temps:          3       0       0       0       0       0       0
  1122 ;;      Totals:         7       0       0       0       0       0       0
  1123 ;;Total ram usage:        7 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    2
  1126 ;; This function calls:
  1127 ;;		___wmul
  1128 ;;		_calculToucheCombien
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text5
  1135  007714                     __ptext5:
  1136                           	opt callstack 0
  1137  007714                     _metToucheCombien:
  1138                           	opt callstack 28
  1139  007714                     
  1140                           ;main.c: 148: for(int i = 0; i<20; i++){
  1141  007714  0E00               	movlw	0
  1142  007716  6E1B               	movwf	(metToucheCombien@i+1)^0,c
  1143  007718  0E00               	movlw	0
  1144  00771A  6E1A               	movwf	metToucheCombien@i^0,c
  1145  00771C                     l2024:
  1146                           
  1147                           ;main.c: 149: for(int j = 0; j<4; j++){
  1148  00771C  0E00               	movlw	0
  1149  00771E  6E1D               	movwf	(metToucheCombien@j+1)^0,c
  1150  007720  0E00               	movlw	0
  1151  007722  6E1C               	movwf	metToucheCombien@j^0,c
  1152  007724                     l2030:
  1153                           
  1154                           ;main.c: 150: if(m_tabMines[j][i] != 3){
  1155  007724  C01C  F001         	movff	metToucheCombien@j,___wmul@multiplier
  1156  007728  C01D  F002         	movff	metToucheCombien@j+1,___wmul@multiplier+1
  1157  00772C  0E00               	movlw	0
  1158  00772E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1159  007730  0E15               	movlw	21
  1160  007732  6E03               	movwf	___wmul@multiplicand^0,c
  1161  007734  ECE5  F037         	call	___wmul	;wreg free
  1162  007738  0E60               	movlw	low _m_tabMines
  1163  00773A  6E17               	movwf	??_metToucheCombien^0,c
  1164  00773C  0E00               	movlw	high _m_tabMines
  1165  00773E  6E18               	movwf	(??_metToucheCombien+1)^0,c
  1166  007740  5001               	movf	?___wmul^0,w,c
  1167  007742  2617               	addwf	??_metToucheCombien^0,f,c
  1168  007744  5002               	movf	(?___wmul+1)^0,w,c
  1169  007746  2218               	addwfc	(??_metToucheCombien+1)^0,f,c
  1170  007748  501A               	movf	metToucheCombien@i^0,w,c
  1171  00774A  2417               	addwf	??_metToucheCombien^0,w,c
  1172  00774C  6ED9               	movwf	fsr2l,c
  1173  00774E  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1174  007750  2018               	addwfc	(??_metToucheCombien+1)^0,w,c
  1175  007752  6EDA               	movwf	fsr2h,c
  1176  007754  0E03               	movlw	3
  1177  007756  18DE               	xorwf	postinc2,w,c
  1178  007758  B4D8               	btfsc	status,2,c
  1179  00775A  EFB1  F03B         	goto	u861
  1180  00775E  EFB3  F03B         	goto	u860
  1181  007762                     u861:
  1182  007762  EFD8  F03B         	goto	l2034
  1183  007766                     u860:
  1184  007766                     
  1185                           ;main.c: 151: m_tabMines[j][i] = calculToucheCombien(j, i);
  1186  007766  C01C  F007         	movff	metToucheCombien@j,calculToucheCombien@ligne
  1187  00776A  C01D  F008         	movff	metToucheCombien@j+1,calculToucheCombien@ligne+1
  1188  00776E  C01A  F009         	movff	metToucheCombien@i,calculToucheCombien@colonne
  1189  007772  C01B  F00A         	movff	metToucheCombien@i+1,calculToucheCombien@colonne+1
  1190  007776  EC1F  F03D         	call	_calculToucheCombien	;wreg free
  1191  00777A  6E17               	movwf	??_metToucheCombien^0,c
  1192  00777C  C01C  F001         	movff	metToucheCombien@j,___wmul@multiplier
  1193  007780  C01D  F002         	movff	metToucheCombien@j+1,___wmul@multiplier+1
  1194  007784  0E00               	movlw	0
  1195  007786  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1196  007788  0E15               	movlw	21
  1197  00778A  6E03               	movwf	___wmul@multiplicand^0,c
  1198  00778C  ECE5  F037         	call	___wmul	;wreg free
  1199  007790  0E60               	movlw	low _m_tabMines
  1200  007792  6E18               	movwf	(??_metToucheCombien+1)^0,c
  1201  007794  0E00               	movlw	high _m_tabMines
  1202  007796  6E19               	movwf	(??_metToucheCombien+2)^0,c
  1203  007798  5001               	movf	?___wmul^0,w,c
  1204  00779A  2618               	addwf	(??_metToucheCombien+1)^0,f,c
  1205  00779C  5002               	movf	(?___wmul+1)^0,w,c
  1206  00779E  2219               	addwfc	(??_metToucheCombien+2)^0,f,c
  1207  0077A0  501A               	movf	metToucheCombien@i^0,w,c
  1208  0077A2  2418               	addwf	(??_metToucheCombien+1)^0,w,c
  1209  0077A4  6ED9               	movwf	fsr2l,c
  1210  0077A6  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1211  0077A8  2019               	addwfc	(??_metToucheCombien+2)^0,w,c
  1212  0077AA  6EDA               	movwf	fsr2h,c
  1213  0077AC  C017  FFDF         	movff	??_metToucheCombien,indf2
  1214  0077B0                     l2034:
  1215  0077B0  4A1C               	infsnz	metToucheCombien@j^0,f,c
  1216  0077B2  2A1D               	incf	(metToucheCombien@j+1)^0,f,c
  1217  0077B4  BE1D               	btfsc	(metToucheCombien@j+1)^0,7,c
  1218  0077B6  EFE6  F03B         	goto	u871
  1219  0077BA  501D               	movf	(metToucheCombien@j+1)^0,w,c
  1220  0077BC  E109               	bnz	u870
  1221  0077BE  0E04               	movlw	4
  1222  0077C0  5C1C               	subwf	metToucheCombien@j^0,w,c
  1223  0077C2  A0D8               	btfss	status,0,c
  1224  0077C4  EFE6  F03B         	goto	u871
  1225  0077C8  EFE8  F03B         	goto	u870
  1226  0077CC                     u871:
  1227  0077CC  EF92  F03B         	goto	l2030
  1228  0077D0                     u870:
  1229  0077D0  4A1A               	infsnz	metToucheCombien@i^0,f,c
  1230  0077D2  2A1B               	incf	(metToucheCombien@i+1)^0,f,c
  1231  0077D4  BE1B               	btfsc	(metToucheCombien@i+1)^0,7,c
  1232  0077D6  EFF6  F03B         	goto	u881
  1233  0077DA  501B               	movf	(metToucheCombien@i+1)^0,w,c
  1234  0077DC  E109               	bnz	u880
  1235  0077DE  0E14               	movlw	20
  1236  0077E0  5C1A               	subwf	metToucheCombien@i^0,w,c
  1237  0077E2  A0D8               	btfss	status,0,c
  1238  0077E4  EFF6  F03B         	goto	u881
  1239  0077E8  EFF8  F03B         	goto	u880
  1240  0077EC                     u881:
  1241  0077EC  EF8E  F03B         	goto	l2024
  1242  0077F0                     u880:
  1243  0077F0  0012               	return		;funcret
  1244  0077F2                     __end_of_metToucheCombien:
  1245                           	opt callstack 0
  1246                           
  1247 ;; *************** function _calculToucheCombien *****************
  1248 ;; Defined at:
  1249 ;;		line 162 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  ligne           2    6[COMRAM] int 
  1252 ;;  colonne         2    8[COMRAM] int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  j               2   20[COMRAM] int 
  1255 ;;  i               2   18[COMRAM] int 
  1256 ;;  y               2   16[COMRAM] int 
  1257 ;;  x               2   14[COMRAM] int 
  1258 ;;  total           1   13[COMRAM] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      unsigned char 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1268 ;;      Params:         4       0       0       0       0       0       0
  1269 ;;      Locals:         9       0       0       0       0       0       0
  1270 ;;      Temps:          3       0       0       0       0       0       0
  1271 ;;      Totals:        16       0       0       0       0       0       0
  1272 ;;Total ram usage:       16 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    1
  1275 ;; This function calls:
  1276 ;;		___wmul
  1277 ;; This function is called by:
  1278 ;;		_metToucheCombien
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text6
  1283  007A3E                     __ptext6:
  1284                           	opt callstack 0
  1285  007A3E                     _calculToucheCombien:
  1286                           	opt callstack 28
  1287  007A3E                     
  1288                           ;main.c: 164: int y = 0;
  1289  007A3E  0E00               	movlw	0
  1290  007A40  6E12               	movwf	(calculToucheCombien@y+1)^0,c
  1291  007A42  0E00               	movlw	0
  1292  007A44  6E11               	movwf	calculToucheCombien@y^0,c
  1293                           
  1294                           ;main.c: 165: char total = 0;
  1295  007A46  0E00               	movlw	0
  1296  007A48  6E0E               	movwf	calculToucheCombien@total^0,c
  1297  007A4A                     
  1298                           ;main.c: 167: for(int i = -1; i < 2; i++){
  1299  007A4A  6813               	setf	calculToucheCombien@i^0,c
  1300  007A4C  6814               	setf	(calculToucheCombien@i+1)^0,c
  1301  007A4E                     l115:
  1302                           
  1303                           ;main.c: 168: for(int j = -1; j < 2; j++){
  1304  007A4E  6815               	setf	calculToucheCombien@j^0,c
  1305  007A50  6816               	setf	(calculToucheCombien@j+1)^0,c
  1306  007A52                     l1782:
  1307                           
  1308                           ;main.c: 169: if(j != 0 || i != 0){
  1309  007A52  5015               	movf	calculToucheCombien@j^0,w,c
  1310  007A54  1016               	iorwf	(calculToucheCombien@j+1)^0,w,c
  1311  007A56  A4D8               	btfss	status,2,c
  1312  007A58  EF30  F03D         	goto	u601
  1313  007A5C  EF32  F03D         	goto	u600
  1314  007A60                     u601:
  1315  007A60  EF3B  F03D         	goto	l1786
  1316  007A64                     u600:
  1317  007A64  5013               	movf	calculToucheCombien@i^0,w,c
  1318  007A66  1014               	iorwf	(calculToucheCombien@i+1)^0,w,c
  1319  007A68  B4D8               	btfsc	status,2,c
  1320  007A6A  EF39  F03D         	goto	u611
  1321  007A6E  EF3B  F03D         	goto	u610
  1322  007A72                     u611:
  1323  007A72  EF93  F03D         	goto	l119
  1324  007A76                     u610:
  1325  007A76                     l1786:
  1326                           
  1327                           ;main.c: 170: x = colonne + i;
  1328  007A76  5013               	movf	calculToucheCombien@i^0,w,c
  1329  007A78  2409               	addwf	calculToucheCombien@colonne^0,w,c
  1330  007A7A  6E0F               	movwf	calculToucheCombien@x^0,c
  1331  007A7C  5014               	movf	(calculToucheCombien@i+1)^0,w,c
  1332  007A7E  200A               	addwfc	(calculToucheCombien@colonne+1)^0,w,c
  1333  007A80  6E10               	movwf	(calculToucheCombien@x+1)^0,c
  1334                           
  1335                           ;main.c: 171: y = ligne + j;
  1336  007A82  5015               	movf	calculToucheCombien@j^0,w,c
  1337  007A84  2407               	addwf	calculToucheCombien@ligne^0,w,c
  1338  007A86  6E11               	movwf	calculToucheCombien@y^0,c
  1339  007A88  5016               	movf	(calculToucheCombien@j+1)^0,w,c
  1340  007A8A  2008               	addwfc	(calculToucheCombien@ligne+1)^0,w,c
  1341  007A8C  6E12               	movwf	(calculToucheCombien@y+1)^0,c
  1342                           
  1343                           ;main.c: 172: if(x >= 0 && x < 20 && y >= 0 && y < 4){
  1344  007A8E  BE10               	btfsc	(calculToucheCombien@x+1)^0,7,c
  1345  007A90  EF4C  F03D         	goto	u621
  1346  007A94  EF4E  F03D         	goto	u620
  1347  007A98                     u621:
  1348  007A98  EF93  F03D         	goto	l119
  1349  007A9C                     u620:
  1350  007A9C  BE10               	btfsc	(calculToucheCombien@x+1)^0,7,c
  1351  007A9E  EF5C  F03D         	goto	u630
  1352  007AA2  5010               	movf	(calculToucheCombien@x+1)^0,w,c
  1353  007AA4  E107               	bnz	u631
  1354  007AA6  0E14               	movlw	20
  1355  007AA8  5C0F               	subwf	calculToucheCombien@x^0,w,c
  1356  007AAA  B0D8               	btfsc	status,0,c
  1357  007AAC  EF5A  F03D         	goto	u631
  1358  007AB0  EF5C  F03D         	goto	u630
  1359  007AB4                     u631:
  1360  007AB4  EF93  F03D         	goto	l119
  1361  007AB8                     u630:
  1362  007AB8  BE12               	btfsc	(calculToucheCombien@y+1)^0,7,c
  1363  007ABA  EF61  F03D         	goto	u641
  1364  007ABE  EF63  F03D         	goto	u640
  1365  007AC2                     u641:
  1366  007AC2  EF93  F03D         	goto	l119
  1367  007AC6                     u640:
  1368  007AC6  BE12               	btfsc	(calculToucheCombien@y+1)^0,7,c
  1369  007AC8  EF71  F03D         	goto	u650
  1370  007ACC  5012               	movf	(calculToucheCombien@y+1)^0,w,c
  1371  007ACE  E107               	bnz	u651
  1372  007AD0  0E04               	movlw	4
  1373  007AD2  5C11               	subwf	calculToucheCombien@y^0,w,c
  1374  007AD4  B0D8               	btfsc	status,0,c
  1375  007AD6  EF6F  F03D         	goto	u651
  1376  007ADA  EF71  F03D         	goto	u650
  1377  007ADE                     u651:
  1378  007ADE  EF93  F03D         	goto	l119
  1379  007AE2                     u650:
  1380  007AE2                     
  1381                           ;main.c: 173: if(m_tabMines[y][x] == 3){
  1382  007AE2  C011  F001         	movff	calculToucheCombien@y,___wmul@multiplier
  1383  007AE6  C012  F002         	movff	calculToucheCombien@y+1,___wmul@multiplier+1
  1384  007AEA  0E00               	movlw	0
  1385  007AEC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1386  007AEE  0E15               	movlw	21
  1387  007AF0  6E03               	movwf	___wmul@multiplicand^0,c
  1388  007AF2  ECE5  F037         	call	___wmul	;wreg free
  1389  007AF6  0E60               	movlw	low _m_tabMines
  1390  007AF8  6E0B               	movwf	??_calculToucheCombien^0,c
  1391  007AFA  0E00               	movlw	high _m_tabMines
  1392  007AFC  6E0C               	movwf	(??_calculToucheCombien+1)^0,c
  1393  007AFE  5001               	movf	?___wmul^0,w,c
  1394  007B00  260B               	addwf	??_calculToucheCombien^0,f,c
  1395  007B02  5002               	movf	(?___wmul+1)^0,w,c
  1396  007B04  220C               	addwfc	(??_calculToucheCombien+1)^0,f,c
  1397  007B06  500F               	movf	calculToucheCombien@x^0,w,c
  1398  007B08  240B               	addwf	??_calculToucheCombien^0,w,c
  1399  007B0A  6ED9               	movwf	fsr2l,c
  1400  007B0C  5010               	movf	(calculToucheCombien@x+1)^0,w,c
  1401  007B0E  200C               	addwfc	(??_calculToucheCombien+1)^0,w,c
  1402  007B10  6EDA               	movwf	fsr2h,c
  1403  007B12  0E03               	movlw	3
  1404  007B14  18DE               	xorwf	postinc2,w,c
  1405  007B16  A4D8               	btfss	status,2,c
  1406  007B18  EF90  F03D         	goto	u661
  1407  007B1C  EF92  F03D         	goto	u660
  1408  007B20                     u661:
  1409  007B20  EF93  F03D         	goto	l119
  1410  007B24                     u660:
  1411  007B24                     
  1412                           ;main.c: 174: total++;
  1413  007B24  2A0E               	incf	calculToucheCombien@total^0,f,c
  1414  007B26                     l119:
  1415  007B26  4A15               	infsnz	calculToucheCombien@j^0,f,c
  1416  007B28  2A16               	incf	(calculToucheCombien@j+1)^0,f,c
  1417  007B2A  BE16               	btfsc	(calculToucheCombien@j+1)^0,7,c
  1418  007B2C  EFA1  F03D         	goto	u671
  1419  007B30  5016               	movf	(calculToucheCombien@j+1)^0,w,c
  1420  007B32  E109               	bnz	u670
  1421  007B34  0E02               	movlw	2
  1422  007B36  5C15               	subwf	calculToucheCombien@j^0,w,c
  1423  007B38  A0D8               	btfss	status,0,c
  1424  007B3A  EFA1  F03D         	goto	u671
  1425  007B3E  EFA3  F03D         	goto	u670
  1426  007B42                     u671:
  1427  007B42  EF29  F03D         	goto	l1782
  1428  007B46                     u670:
  1429  007B46  4A13               	infsnz	calculToucheCombien@i^0,f,c
  1430  007B48  2A14               	incf	(calculToucheCombien@i+1)^0,f,c
  1431  007B4A  BE14               	btfsc	(calculToucheCombien@i+1)^0,7,c
  1432  007B4C  EFB1  F03D         	goto	u681
  1433  007B50  5014               	movf	(calculToucheCombien@i+1)^0,w,c
  1434  007B52  E109               	bnz	u680
  1435  007B54  0E02               	movlw	2
  1436  007B56  5C13               	subwf	calculToucheCombien@i^0,w,c
  1437  007B58  A0D8               	btfss	status,0,c
  1438  007B5A  EFB1  F03D         	goto	u681
  1439  007B5E  EFB3  F03D         	goto	u680
  1440  007B62                     u681:
  1441  007B62  EF27  F03D         	goto	l115
  1442  007B66                     u680:
  1443  007B66                     
  1444                           ;main.c: 175: };main.c: 176: };main.c: 177: };main.c: 178: };main.c: 179: };main.c: 180:
      +                           if(total == 0){
  1445  007B66  500E               	movf	calculToucheCombien@total^0,w,c
  1446  007B68  A4D8               	btfss	status,2,c
  1447  007B6A  EFB9  F03D         	goto	u691
  1448  007B6E  EFBB  F03D         	goto	u690
  1449  007B72                     u691:
  1450  007B72  EFBE  F03D         	goto	l1810
  1451  007B76                     u690:
  1452  007B76                     
  1453                           ;main.c: 181: return 32;
  1454  007B76  0E20               	movlw	32
  1455  007B78  EFC0  F03D         	goto	l125
  1456  007B7C                     l1810:
  1457                           
  1458                           ;main.c: 182: };main.c: 183: return total+48;
  1459  007B7C  500E               	movf	calculToucheCombien@total^0,w,c
  1460  007B7E  0F30               	addlw	48
  1461  007B80                     l125:
  1462  007B80  0012               	return		;funcret
  1463  007B82                     __end_of_calculToucheCombien:
  1464                           	opt callstack 0
  1465                           
  1466 ;; *************** function _lcd_init *****************
  1467 ;; Defined at:
  1468 ;;		line 282 in file "Lcd4Lignes.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1482 ;;      Params:         0       0       0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0
  1485 ;;      Totals:         0       0       0       0       0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    5
  1489 ;; This function calls:
  1490 ;;		_lcd_initCGRam
  1491 ;;		_lcd_resetSequence
  1492 ;;		_lcd_wrCom
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text7
  1499  007018                     __ptext7:
  1500                           	opt callstack 0
  1501  007018                     _lcd_init:
  1502                           	opt callstack 25
  1503  007018                     
  1504                           ;Lcd4Lignes.c: 285: lcd_resetSequence();
  1505  007018  ECB8  F039         	call	_lcd_resetSequence	;wreg free
  1506                           
  1507                           ;Lcd4Lignes.c: 286: lcd_wrCom(0x28);
  1508  00701C  0E28               	movlw	40
  1509  00701E  EC56  F039         	call	_lcd_wrCom
  1510                           
  1511                           ;Lcd4Lignes.c: 287: lcd_wrCom(0x0F);
  1512  007022  0E0F               	movlw	15
  1513  007024  EC56  F039         	call	_lcd_wrCom
  1514                           
  1515                           ;Lcd4Lignes.c: 288: lcd_wrCom(0x01);
  1516  007028  0E01               	movlw	1
  1517  00702A  EC56  F039         	call	_lcd_wrCom
  1518                           
  1519                           ;Lcd4Lignes.c: 289: lcd_wrCom(0x06);
  1520  00702E  0E06               	movlw	6
  1521  007030  EC56  F039         	call	_lcd_wrCom
  1522                           
  1523                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x80);
  1524  007034  0E80               	movlw	128
  1525  007036  EC56  F039         	call	_lcd_wrCom
  1526  00703A                     
  1527                           ;Lcd4Lignes.c: 291: lcd_initCGRam();
  1528  00703A  EC27  F039         	call	_lcd_initCGRam	;wreg free
  1529  00703E  0012               	return		;funcret
  1530  007040                     __end_of_lcd_init:
  1531                           	opt callstack 0
  1532                           
  1533 ;; *************** function _lcd_resetSequence *****************
  1534 ;; Defined at:
  1535 ;;		line 245 in file "Lcd4Lignes.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1549 ;;      Params:         0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0
  1551 ;;      Temps:          1       0       0       0       0       0       0
  1552 ;;      Totals:         1       0       0       0       0       0       0
  1553 ;;Total ram usage:        1 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		_lcd_ecrireDonnees
  1558 ;;		_lcd_strobeEnableBit
  1559 ;; This function is called by:
  1560 ;;		_lcd_init
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text8
  1565  007370                     __ptext8:
  1566                           	opt callstack 0
  1567  007370                     _lcd_resetSequence:
  1568                           	opt callstack 28
  1569  007370                     
  1570                           ;Lcd4Lignes.c: 250: TRISD = 0b00000000;
  1571  007370  0E00               	movlw	0
  1572  007372  6E95               	movwf	149,c	;volatile
  1573  007374                     
  1574                           ;Lcd4Lignes.c: 252: _delay((unsigned long)((40)*(1000000/4000.0)));
  1575  007374  0E0D               	movlw	13
  1576  007376  6E03               	movwf	??_lcd_resetSequence^0,c
  1577  007378  0EFC               	movlw	252
  1578  00737A                     u1057:
  1579  00737A  2EE8               	decfsz	wreg,f,c
  1580  00737C  D7FE               	bra	u1057
  1581  00737E  2E03               	decfsz	??_lcd_resetSequence^0,f,c
  1582  007380  D7FC               	bra	u1057
  1583  007382                     
  1584                           ;Lcd4Lignes.c: 253: PORTAbits.RA0 = 0;
  1585  007382  9080               	bcf	128,0,c	;volatile
  1586  007384                     
  1587                           ;Lcd4Lignes.c: 254: PORTAbits.RA1 = 0;
  1588  007384  9280               	bcf	128,1,c	;volatile
  1589  007386                     
  1590                           ;Lcd4Lignes.c: 256: lcd_ecrireDonnees(0x03);
  1591  007386  0E03               	movlw	3
  1592  007388  ECDB  F037         	call	_lcd_ecrireDonnees
  1593  00738C                     
  1594                           ;Lcd4Lignes.c: 257: lcd_strobeEnableBit();
  1595  00738C  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  1596  007390                     
  1597                           ;Lcd4Lignes.c: 258: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1598  007390  0E03               	movlw	3
  1599  007392                     u1067:
  1600  007392  2EE8               	decfsz	wreg,f,c
  1601  007394  D7FE               	bra	u1067
  1602  007396  F000               	nop	
  1603  007398                     
  1604                           ;Lcd4Lignes.c: 261: lcd_ecrireDonnees(0x03);
  1605  007398  0E03               	movlw	3
  1606  00739A  ECDB  F037         	call	_lcd_ecrireDonnees
  1607  00739E                     
  1608                           ;Lcd4Lignes.c: 262: lcd_strobeEnableBit();
  1609  00739E  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  1610  0073A2                     
  1611                           ;Lcd4Lignes.c: 263: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1612  0073A2  0E03               	movlw	3
  1613  0073A4                     u1077:
  1614  0073A4  2EE8               	decfsz	wreg,f,c
  1615  0073A6  D7FE               	bra	u1077
  1616  0073A8  F000               	nop	
  1617  0073AA                     
  1618                           ;Lcd4Lignes.c: 265: lcd_ecrireDonnees(0x03);
  1619  0073AA  0E03               	movlw	3
  1620  0073AC  ECDB  F037         	call	_lcd_ecrireDonnees
  1621  0073B0                     
  1622                           ;Lcd4Lignes.c: 266: lcd_strobeEnableBit();
  1623  0073B0  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  1624  0073B4                     
  1625                           ;Lcd4Lignes.c: 267: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1626  0073B4  0E03               	movlw	3
  1627  0073B6                     u1087:
  1628  0073B6  2EE8               	decfsz	wreg,f,c
  1629  0073B8  D7FE               	bra	u1087
  1630  0073BA  F000               	nop	
  1631  0073BC                     
  1632                           ;Lcd4Lignes.c: 269: lcd_ecrireDonnees(0x02);
  1633  0073BC  0E02               	movlw	2
  1634  0073BE  ECDB  F037         	call	_lcd_ecrireDonnees
  1635  0073C2                     
  1636                           ;Lcd4Lignes.c: 270: lcd_strobeEnableBit();
  1637  0073C2  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  1638  0073C6                     
  1639                           ;Lcd4Lignes.c: 271: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1640  0073C6  0E03               	movlw	3
  1641  0073C8                     u1097:
  1642  0073C8  2EE8               	decfsz	wreg,f,c
  1643  0073CA  D7FE               	bra	u1097
  1644  0073CC  F000               	nop	
  1645  0073CE                     
  1646                           ;Lcd4Lignes.c: 273: TRISD = 0b00001111;
  1647  0073CE  0E0F               	movlw	15
  1648  0073D0  6E95               	movwf	149,c	;volatile
  1649  0073D2  0012               	return		;funcret
  1650  0073D4                     __end_of_lcd_resetSequence:
  1651                           	opt callstack 0
  1652                           
  1653 ;; *************** function _lcd_initCGRam *****************
  1654 ;; Defined at:
  1655 ;;		line 441 in file "Lcd4Lignes.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  j               1    6[COMRAM] unsigned char 
  1660 ;;  i               1    5[COMRAM] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       0       0       0       0       0       0
  1671 ;;      Locals:         2       0       0       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0
  1673 ;;      Totals:         4       0       0       0       0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    4
  1677 ;; This function calls:
  1678 ;;		_lcd_curseurHome
  1679 ;;		_lcd_wrCom
  1680 ;;		_lcd_wrData
  1681 ;; This function is called by:
  1682 ;;		_lcd_init
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text9
  1687  00724E                     __ptext9:
  1688                           	opt callstack 0
  1689  00724E                     _lcd_initCGRam:
  1690                           	opt callstack 25
  1691  00724E                     
  1692                           ;Lcd4Lignes.c: 443: char i,j;;Lcd4Lignes.c: 445: lcd_wrCom(0x40);
  1693  00724E  0E40               	movlw	64
  1694  007250  EC56  F039         	call	_lcd_wrCom
  1695  007254                     
  1696                           ;Lcd4Lignes.c: 446: for(i=0;i<8;i++)
  1697  007254  0E00               	movlw	0
  1698  007256  6E06               	movwf	lcd_initCGRam@i^0,c
  1699  007258                     l1882:
  1700                           
  1701                           ;Lcd4Lignes.c: 447: {;Lcd4Lignes.c: 448: for(j=0;j<8;j++)
  1702  007258  0E00               	movlw	0
  1703  00725A  6E07               	movwf	lcd_initCGRam@j^0,c
  1704  00725C                     l1888:
  1705                           
  1706                           ;Lcd4Lignes.c: 449: lcd_wrData(matCGRAM[i][j]);
  1707  00725C  5006               	movf	lcd_initCGRam@i^0,w,c
  1708  00725E  0D08               	mullw	8
  1709  007260  0EB4               	movlw	low _matCGRAM
  1710  007262  6E04               	movwf	??_lcd_initCGRam^0,c
  1711  007264  0E00               	movlw	high _matCGRAM
  1712  007266  6E05               	movwf	(??_lcd_initCGRam+1)^0,c
  1713  007268  50F3               	movf	243,w,c
  1714  00726A  2604               	addwf	??_lcd_initCGRam^0,f,c
  1715  00726C  50F4               	movf	244,w,c
  1716  00726E  2205               	addwfc	(??_lcd_initCGRam+1)^0,f,c
  1717  007270  5007               	movf	lcd_initCGRam@j^0,w,c
  1718  007272  2404               	addwf	??_lcd_initCGRam^0,w,c
  1719  007274  6ED9               	movwf	fsr2l,c
  1720  007276  0E00               	movlw	0
  1721  007278  2005               	addwfc	(??_lcd_initCGRam+1)^0,w,c
  1722  00727A  6EDA               	movwf	fsr2h,c
  1723  00727C  50DF               	movf	indf2,w,c
  1724  00727E  EC20  F038         	call	_lcd_wrData
  1725  007282  2A07               	incf	lcd_initCGRam@j^0,f,c
  1726  007284  0E07               	movlw	7
  1727  007286  6407               	cpfsgt	lcd_initCGRam@j^0,c
  1728  007288  EF48  F039         	goto	u721
  1729  00728C  EF4A  F039         	goto	u720
  1730  007290                     u721:
  1731  007290  EF2E  F039         	goto	l1888
  1732  007294                     u720:
  1733  007294  2A06               	incf	lcd_initCGRam@i^0,f,c
  1734  007296  0E07               	movlw	7
  1735  007298  6406               	cpfsgt	lcd_initCGRam@i^0,c
  1736  00729A  EF51  F039         	goto	u731
  1737  00729E  EF53  F039         	goto	u730
  1738  0072A2                     u731:
  1739  0072A2  EF2C  F039         	goto	l1882
  1740  0072A6                     u730:
  1741  0072A6                     
  1742                           ;Lcd4Lignes.c: 450: };Lcd4Lignes.c: 451: lcd_curseurHome();
  1743  0072A6  ECC9  F037         	call	_lcd_curseurHome	;wreg free
  1744  0072AA  0012               	return		;funcret
  1745  0072AC                     __end_of_lcd_initCGRam:
  1746                           	opt callstack 0
  1747                           
  1748 ;; *************** function _lcd_curseurHome *****************
  1749 ;; Defined at:
  1750 ;;		line 312 in file "Lcd4Lignes.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         0       0       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    3
  1771 ;; This function calls:
  1772 ;;		_lcd_wrCom
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;;		_lcd_initCGRam
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text10
  1780  006F92                     __ptext10:
  1781                           	opt callstack 0
  1782  006F92                     _lcd_curseurHome:
  1783                           	opt callstack 25
  1784  006F92                     
  1785                           ;Lcd4Lignes.c: 314: lcd_wrCom(0x02);
  1786  006F92  0E02               	movlw	2
  1787  006F94  EC56  F039         	call	_lcd_wrCom
  1788  006F98  0012               	return		;funcret
  1789  006F9A                     __end_of_lcd_curseurHome:
  1790                           	opt callstack 0
  1791                           
  1792 ;; *************** function _initialisation *****************
  1793 ;; Defined at:
  1794 ;;		line 306 in file "main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1808 ;;      Params:         0       0       0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    1
  1815 ;; This function calls:
  1816 ;;		_srand
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text11
  1823  00706E                     __ptext11:
  1824                           	opt callstack 0
  1825  00706E                     _initialisation:
  1826                           	opt callstack 29
  1827  00706E                     
  1828                           ;main.c: 309: TRISD = 0;
  1829  00706E  0E00               	movlw	0
  1830  007070  6E95               	movwf	149,c	;volatile
  1831                           
  1832                           ;main.c: 311: ANSELH = 0;
  1833  007072  0E00               	movlw	0
  1834  007074  6E7F               	movwf	127,c	;volatile
  1835  007076                     
  1836                           ;main.c: 312: TRISB = 0xFF;
  1837  007076  6893               	setf	147,c	;volatile
  1838                           
  1839                           ;main.c: 314: ANSEL = 0;
  1840  007078  0E00               	movlw	0
  1841  00707A  6E7E               	movwf	126,c	;volatile
  1842                           
  1843                           ;main.c: 315: TRISA = 0;
  1844  00707C  0E00               	movlw	0
  1845  00707E  6E92               	movwf	146,c	;volatile
  1846  007080                     
  1847                           ;main.c: 319: T1CONbits.TMR1ON = 1;
  1848  007080  80CD               	bsf	205,0,c	;volatile
  1849  007082                     
  1850                           ;main.c: 320: srand(TMR1);
  1851  007082  CFCE F001          	movff	4046,srand@x	;volatile
  1852  007086  CFCF F002          	movff	4047,srand@x+1	;volatile
  1853  00708A  ECD4  F037         	call	_srand	;wreg free
  1854  00708E                     
  1855                           ;main.c: 323: ANSELbits.ANS7 = 1;
  1856  00708E  8E7E               	bsf	126,7,c	;volatile
  1857  007090                     
  1858                           ;main.c: 325: ADCON0bits.ADON = 1;
  1859  007090  80C2               	bsf	194,0,c	;volatile
  1860  007092                     
  1861                           ;main.c: 326: ADCON1 = 0;
  1862  007092  0E00               	movlw	0
  1863  007094  6EC1               	movwf	193,c	;volatile
  1864  007096                     
  1865                           ;main.c: 328: ADCON2bits.ADFM = 0;
  1866  007096  9EC0               	bcf	192,7,c	;volatile
  1867  007098                     
  1868                           ;main.c: 329: ADCON2bits.ACQT = 0;
  1869  007098  0EC7               	movlw	-57
  1870  00709A  16C0               	andwf	192,f,c	;volatile
  1871  00709C                     
  1872                           ;main.c: 330: ADCON2bits.ADCS = 0;
  1873  00709C  0EF8               	movlw	-8
  1874  00709E  16C0               	andwf	192,f,c	;volatile
  1875  0070A0  0012               	return		;funcret
  1876  0070A2                     __end_of_initialisation:
  1877                           	opt callstack 0
  1878                           
  1879 ;; *************** function _srand *****************
  1880 ;; Defined at:
  1881 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  x               2    0[COMRAM] unsigned int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		status,2
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1895 ;;      Params:         2       0       0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0
  1898 ;;      Totals:         2       0       0       0       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_initialisation
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text12
  1909  006FA8                     __ptext12:
  1910                           	opt callstack 0
  1911  006FA8                     _srand:
  1912                           	opt callstack 29
  1913  006FA8  C001  F025         	movff	srand@x,_randx
  1914  006FAC  C002  F026         	movff	srand@x+1,_randx+1
  1915  006FB0  6A27               	clrf	(_randx+2)^0,c
  1916  006FB2  6A28               	clrf	(_randx+3)^0,c
  1917  006FB4  0012               	return		;funcret
  1918  006FB6                     __end_of_srand:
  1919                           	opt callstack 0
  1920                           
  1921 ;; *************** function _initTabVue *****************
  1922 ;; Defined at:
  1923 ;;		line 103 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  j               2    8[COMRAM] int 
  1928 ;;  i               2   10[COMRAM] int 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         0       0       0       0       0       0       0
  1939 ;;      Locals:         4       0       0       0       0       0       0
  1940 ;;      Temps:          2       0       0       0       0       0       0
  1941 ;;      Totals:         6       0       0       0       0       0       0
  1942 ;;Total ram usage:        6 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    1
  1945 ;; This function calls:
  1946 ;;		___wmul
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text13
  1953  0075BA                     __ptext13:
  1954                           	opt callstack 0
  1955  0075BA                     _initTabVue:
  1956                           	opt callstack 29
  1957  0075BA                     
  1958                           ;main.c: 104: for(int i = 0; i<4; i++){
  1959  0075BA  0E00               	movlw	0
  1960  0075BC  6E0C               	movwf	(initTabVue@i+1)^0,c
  1961  0075BE  0E00               	movlw	0
  1962  0075C0  6E0B               	movwf	initTabVue@i^0,c
  1963  0075C2                     l1966:
  1964                           
  1965                           ;main.c: 105: for(int j = 0; j<20; j++){
  1966  0075C2  0E00               	movlw	0
  1967  0075C4  6E0A               	movwf	(initTabVue@j+1)^0,c
  1968  0075C6  0E00               	movlw	0
  1969  0075C8  6E09               	movwf	initTabVue@j^0,c
  1970  0075CA                     l1972:
  1971                           
  1972                           ;main.c: 106: m_tabVue[i][j] = 2;
  1973  0075CA  C00B  F001         	movff	initTabVue@i,___wmul@multiplier
  1974  0075CE  C00C  F002         	movff	initTabVue@i+1,___wmul@multiplier+1
  1975  0075D2  0E00               	movlw	0
  1976  0075D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1977  0075D6  0E15               	movlw	21
  1978  0075D8  6E03               	movwf	___wmul@multiplicand^0,c
  1979  0075DA  ECE5  F037         	call	___wmul	;wreg free
  1980  0075DE  0E00               	movlw	low _m_tabVue
  1981  0075E0  6E07               	movwf	??_initTabVue^0,c
  1982  0075E2  0E01               	movlw	high _m_tabVue
  1983  0075E4  6E08               	movwf	(??_initTabVue+1)^0,c
  1984  0075E6  5001               	movf	?___wmul^0,w,c
  1985  0075E8  2607               	addwf	??_initTabVue^0,f,c
  1986  0075EA  5002               	movf	(?___wmul+1)^0,w,c
  1987  0075EC  2208               	addwfc	(??_initTabVue+1)^0,f,c
  1988  0075EE  5009               	movf	initTabVue@j^0,w,c
  1989  0075F0  2407               	addwf	??_initTabVue^0,w,c
  1990  0075F2  6ED9               	movwf	fsr2l,c
  1991  0075F4  500A               	movf	(initTabVue@j+1)^0,w,c
  1992  0075F6  2008               	addwfc	(??_initTabVue+1)^0,w,c
  1993  0075F8  6EDA               	movwf	fsr2h,c
  1994  0075FA  0E02               	movlw	2
  1995  0075FC  6EDF               	movwf	indf2,c
  1996  0075FE  4A09               	infsnz	initTabVue@j^0,f,c
  1997  007600  2A0A               	incf	(initTabVue@j+1)^0,f,c
  1998  007602  BE0A               	btfsc	(initTabVue@j+1)^0,7,c
  1999  007604  EF0D  F03B         	goto	u801
  2000  007608  500A               	movf	(initTabVue@j+1)^0,w,c
  2001  00760A  E109               	bnz	u800
  2002  00760C  0E14               	movlw	20
  2003  00760E  5C09               	subwf	initTabVue@j^0,w,c
  2004  007610  A0D8               	btfss	status,0,c
  2005  007612  EF0D  F03B         	goto	u801
  2006  007616  EF0F  F03B         	goto	u800
  2007  00761A                     u801:
  2008  00761A  EFE5  F03A         	goto	l1972
  2009  00761E                     u800:
  2010  00761E                     
  2011                           ;main.c: 107: };main.c: 108: m_tabVue[i][20] = '\0';
  2012  00761E  C00B  F001         	movff	initTabVue@i,___wmul@multiplier
  2013  007622  C00C  F002         	movff	initTabVue@i+1,___wmul@multiplier+1
  2014  007626  0E00               	movlw	0
  2015  007628  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2016  00762A  0E15               	movlw	21
  2017  00762C  6E03               	movwf	___wmul@multiplicand^0,c
  2018  00762E  ECE5  F037         	call	___wmul	;wreg free
  2019  007632  0E14               	movlw	low (_m_tabVue+20)
  2020  007634  2401               	addwf	?___wmul^0,w,c
  2021  007636  6ED9               	movwf	fsr2l,c
  2022  007638  0E01               	movlw	high (_m_tabVue+20)
  2023  00763A  2002               	addwfc	(?___wmul+1)^0,w,c
  2024  00763C  6EDA               	movwf	fsr2h,c
  2025  00763E  0E00               	movlw	0
  2026  007640  6EDF               	movwf	indf2,c
  2027  007642  4A0B               	infsnz	initTabVue@i^0,f,c
  2028  007644  2A0C               	incf	(initTabVue@i+1)^0,f,c
  2029  007646  BE0C               	btfsc	(initTabVue@i+1)^0,7,c
  2030  007648  EF2F  F03B         	goto	u811
  2031  00764C  500C               	movf	(initTabVue@i+1)^0,w,c
  2032  00764E  E109               	bnz	u810
  2033  007650  0E04               	movlw	4
  2034  007652  5C0B               	subwf	initTabVue@i^0,w,c
  2035  007654  A0D8               	btfss	status,0,c
  2036  007656  EF2F  F03B         	goto	u811
  2037  00765A  EF31  F03B         	goto	u810
  2038  00765E                     u811:
  2039  00765E  EFE1  F03A         	goto	l1966
  2040  007662                     u810:
  2041  007662  0012               	return		;funcret
  2042  007664                     __end_of_initTabVue:
  2043                           	opt callstack 0
  2044                           
  2045 ;; *************** function _deplace *****************
  2046 ;; Defined at:
  2047 ;;		line 192 in file "main.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  px              2    5[COMRAM] PTR unsigned char 
  2050 ;;		 -> main@x(1), 
  2051 ;;  py              2    7[COMRAM] PTR unsigned char 
  2052 ;;		 -> main@y(1), 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  aY              2   12[COMRAM] int 
  2055 ;;  aX              2   10[COMRAM] int 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2065 ;;      Params:         4       0       0       0       0       0       0
  2066 ;;      Locals:         4       0       0       0       0       0       0
  2067 ;;      Temps:          1       0       0       0       0       0       0
  2068 ;;      Totals:         9       0       0       0       0       0       0
  2069 ;;Total ram usage:        9 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    4
  2072 ;; This function calls:
  2073 ;;		_getAnalog
  2074 ;;		_lcd_gotoXY
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text14
  2081  007B82                     __ptext14:
  2082                           	opt callstack 0
  2083  007B82                     _deplace:
  2084                           	opt callstack 26
  2085  007B82                     
  2086                           ;main.c: 193: int aX = getAnalog(7);
  2087  007B82  0E07               	movlw	7
  2088  007B84  ECF8  F037         	call	_getAnalog
  2089  007B88  6E0A               	movwf	??_deplace^0,c
  2090  007B8A  500A               	movf	??_deplace^0,w,c
  2091  007B8C  6E0B               	movwf	deplace@aX^0,c
  2092  007B8E  6A0C               	clrf	(deplace@aX+1)^0,c
  2093                           
  2094                           ;main.c: 194: int aY = getAnalog(6);
  2095  007B90  0E06               	movlw	6
  2096  007B92  ECF8  F037         	call	_getAnalog
  2097  007B96  6E0A               	movwf	??_deplace^0,c
  2098  007B98  500A               	movf	??_deplace^0,w,c
  2099  007B9A  6E0D               	movwf	deplace@aY^0,c
  2100  007B9C  6A0E               	clrf	(deplace@aY+1)^0,c
  2101  007B9E                     
  2102                           ;main.c: 196: if(aX < 100){
  2103  007B9E  BE0C               	btfsc	(deplace@aX+1)^0,7,c
  2104  007BA0  EFDD  F03D         	goto	u890
  2105  007BA4  500C               	movf	(deplace@aX+1)^0,w,c
  2106  007BA6  E107               	bnz	u891
  2107  007BA8  0E64               	movlw	100
  2108  007BAA  5C0B               	subwf	deplace@aX^0,w,c
  2109  007BAC  B0D8               	btfsc	status,0,c
  2110  007BAE  EFDB  F03D         	goto	u891
  2111  007BB2  EFDD  F03D         	goto	u890
  2112  007BB6                     u891:
  2113  007BB6  EF03  F03E         	goto	l2054
  2114  007BBA                     u890:
  2115  007BBA                     
  2116                           ;main.c: 197: (*px)--;
  2117  007BBA  C006  FFD9         	movff	deplace@px,fsr2l
  2118  007BBE  C007  FFDA         	movff	deplace@px+1,fsr2h
  2119  007BC2  06DF               	decf	indf2,f,c
  2120  007BC4                     
  2121                           ;main.c: 198: if(*px <= 0){
  2122  007BC4  C006  FFD9         	movff	deplace@px,fsr2l
  2123  007BC8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2124  007BCC  50DF               	movf	indf2,w,c
  2125  007BCE  A4D8               	btfss	status,2,c
  2126  007BD0  EFEC  F03D         	goto	u901
  2127  007BD4  EFEE  F03D         	goto	u900
  2128  007BD8                     u901:
  2129  007BD8  EFF4  F03D         	goto	l2052
  2130  007BDC                     u900:
  2131  007BDC                     
  2132                           ;main.c: 199: *px = 20;
  2133  007BDC  C006  FFD9         	movff	deplace@px,fsr2l
  2134  007BE0  C007  FFDA         	movff	deplace@px+1,fsr2h
  2135  007BE4  0E14               	movlw	20
  2136  007BE6  6EDF               	movwf	indf2,c
  2137  007BE8                     l2052:
  2138                           
  2139                           ;main.c: 200: };main.c: 201: lcd_gotoXY((*px), (*py));
  2140  007BE8  C008  FFD9         	movff	deplace@py,fsr2l
  2141  007BEC  C009  FFDA         	movff	deplace@py+1,fsr2h
  2142  007BF0  50DF               	movf	indf2,w,c
  2143  007BF2  6E04               	movwf	lcd_gotoXY@y^0,c
  2144  007BF4  C006  FFD9         	movff	deplace@px,fsr2l
  2145  007BF8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2146  007BFC  50DF               	movf	indf2,w,c
  2147  007BFE  ECEA  F039         	call	_lcd_gotoXY
  2148                           
  2149                           ;main.c: 202: }else if(aX > 150){
  2150  007C02  EF9F  F03E         	goto	l139
  2151  007C06                     l2054:
  2152  007C06  BE0C               	btfsc	(deplace@aX+1)^0,7,c
  2153  007C08  EF0F  F03E         	goto	u911
  2154  007C0C  500C               	movf	(deplace@aX+1)^0,w,c
  2155  007C0E  E109               	bnz	u910
  2156  007C10  0E97               	movlw	151
  2157  007C12  5C0B               	subwf	deplace@aX^0,w,c
  2158  007C14  A0D8               	btfss	status,0,c
  2159  007C16  EF0F  F03E         	goto	u911
  2160  007C1A  EF11  F03E         	goto	u910
  2161  007C1E                     u911:
  2162  007C1E  EF37  F03E         	goto	l2064
  2163  007C22                     u910:
  2164  007C22                     
  2165                           ;main.c: 203: (*px)++;
  2166  007C22  C006  FFD9         	movff	deplace@px,fsr2l
  2167  007C26  C007  FFDA         	movff	deplace@px+1,fsr2h
  2168  007C2A  2ADF               	incf	indf2,f,c
  2169  007C2C                     
  2170                           ;main.c: 204: if(*px > 20){
  2171  007C2C  C006  FFD9         	movff	deplace@px,fsr2l
  2172  007C30  C007  FFDA         	movff	deplace@px+1,fsr2h
  2173  007C34  0E14               	movlw	20
  2174  007C36  64DF               	cpfsgt	indf2,c
  2175  007C38  EF20  F03E         	goto	u921
  2176  007C3C  EF22  F03E         	goto	u920
  2177  007C40                     u921:
  2178  007C40  EF28  F03E         	goto	l2062
  2179  007C44                     u920:
  2180  007C44                     
  2181                           ;main.c: 205: *px = 1;
  2182  007C44  C006  FFD9         	movff	deplace@px,fsr2l
  2183  007C48  C007  FFDA         	movff	deplace@px+1,fsr2h
  2184  007C4C  0E01               	movlw	1
  2185  007C4E  6EDF               	movwf	indf2,c
  2186  007C50                     l2062:
  2187                           
  2188                           ;main.c: 206: };main.c: 207: lcd_gotoXY((*px), (*py));
  2189  007C50  C008  FFD9         	movff	deplace@py,fsr2l
  2190  007C54  C009  FFDA         	movff	deplace@py+1,fsr2h
  2191  007C58  50DF               	movf	indf2,w,c
  2192  007C5A  6E04               	movwf	lcd_gotoXY@y^0,c
  2193  007C5C  C006  FFD9         	movff	deplace@px,fsr2l
  2194  007C60  C007  FFDA         	movff	deplace@px+1,fsr2h
  2195  007C64  50DF               	movf	indf2,w,c
  2196  007C66  ECEA  F039         	call	_lcd_gotoXY
  2197                           
  2198                           ;main.c: 208: }else if(aY < 100){
  2199  007C6A  EF9F  F03E         	goto	l139
  2200  007C6E                     l2064:
  2201  007C6E  BE0E               	btfsc	(deplace@aY+1)^0,7,c
  2202  007C70  EF45  F03E         	goto	u930
  2203  007C74  500E               	movf	(deplace@aY+1)^0,w,c
  2204  007C76  E107               	bnz	u931
  2205  007C78  0E64               	movlw	100
  2206  007C7A  5C0D               	subwf	deplace@aY^0,w,c
  2207  007C7C  B0D8               	btfsc	status,0,c
  2208  007C7E  EF43  F03E         	goto	u931
  2209  007C82  EF45  F03E         	goto	u930
  2210  007C86                     u931:
  2211  007C86  EF6B  F03E         	goto	l2074
  2212  007C8A                     u930:
  2213  007C8A                     
  2214                           ;main.c: 209: (*py)++;
  2215  007C8A  C008  FFD9         	movff	deplace@py,fsr2l
  2216  007C8E  C009  FFDA         	movff	deplace@py+1,fsr2h
  2217  007C92  2ADF               	incf	indf2,f,c
  2218  007C94                     
  2219                           ;main.c: 210: if(*py > 4){
  2220  007C94  C008  FFD9         	movff	deplace@py,fsr2l
  2221  007C98  C009  FFDA         	movff	deplace@py+1,fsr2h
  2222  007C9C  0E04               	movlw	4
  2223  007C9E  64DF               	cpfsgt	indf2,c
  2224  007CA0  EF54  F03E         	goto	u941
  2225  007CA4  EF56  F03E         	goto	u940
  2226  007CA8                     u941:
  2227  007CA8  EF5C  F03E         	goto	l2072
  2228  007CAC                     u940:
  2229  007CAC                     
  2230                           ;main.c: 211: *py = 1;
  2231  007CAC  C008  FFD9         	movff	deplace@py,fsr2l
  2232  007CB0  C009  FFDA         	movff	deplace@py+1,fsr2h
  2233  007CB4  0E01               	movlw	1
  2234  007CB6  6EDF               	movwf	indf2,c
  2235  007CB8                     l2072:
  2236                           
  2237                           ;main.c: 212: };main.c: 213: lcd_gotoXY((*px), (*py));
  2238  007CB8  C008  FFD9         	movff	deplace@py,fsr2l
  2239  007CBC  C009  FFDA         	movff	deplace@py+1,fsr2h
  2240  007CC0  50DF               	movf	indf2,w,c
  2241  007CC2  6E04               	movwf	lcd_gotoXY@y^0,c
  2242  007CC4  C006  FFD9         	movff	deplace@px,fsr2l
  2243  007CC8  C007  FFDA         	movff	deplace@px+1,fsr2h
  2244  007CCC  50DF               	movf	indf2,w,c
  2245  007CCE  ECEA  F039         	call	_lcd_gotoXY
  2246                           
  2247                           ;main.c: 214: }else if(aY > 150){
  2248  007CD2  EF9F  F03E         	goto	l139
  2249  007CD6                     l2074:
  2250  007CD6  BE0E               	btfsc	(deplace@aY+1)^0,7,c
  2251  007CD8  EF77  F03E         	goto	u951
  2252  007CDC  500E               	movf	(deplace@aY+1)^0,w,c
  2253  007CDE  E109               	bnz	u950
  2254  007CE0  0E97               	movlw	151
  2255  007CE2  5C0D               	subwf	deplace@aY^0,w,c
  2256  007CE4  A0D8               	btfss	status,0,c
  2257  007CE6  EF77  F03E         	goto	u951
  2258  007CEA  EF79  F03E         	goto	u950
  2259  007CEE                     u951:
  2260  007CEE  EF9F  F03E         	goto	l133
  2261  007CF2                     u950:
  2262  007CF2                     
  2263                           ;main.c: 215: (*py)--;
  2264  007CF2  C008  FFD9         	movff	deplace@py,fsr2l
  2265  007CF6  C009  FFDA         	movff	deplace@py+1,fsr2h
  2266  007CFA  06DF               	decf	indf2,f,c
  2267  007CFC                     
  2268                           ;main.c: 216: if(*py <= 0){
  2269  007CFC  C008  FFD9         	movff	deplace@py,fsr2l
  2270  007D00  C009  FFDA         	movff	deplace@py+1,fsr2h
  2271  007D04  50DF               	movf	indf2,w,c
  2272  007D06  A4D8               	btfss	status,2,c
  2273  007D08  EF88  F03E         	goto	u961
  2274  007D0C  EF8A  F03E         	goto	u960
  2275  007D10                     u961:
  2276  007D10  EF90  F03E         	goto	l2082
  2277  007D14                     u960:
  2278  007D14                     
  2279                           ;main.c: 217: *py = 4;
  2280  007D14  C008  FFD9         	movff	deplace@py,fsr2l
  2281  007D18  C009  FFDA         	movff	deplace@py+1,fsr2h
  2282  007D1C  0E04               	movlw	4
  2283  007D1E  6EDF               	movwf	indf2,c
  2284  007D20                     l2082:
  2285                           
  2286                           ;main.c: 219: };main.c: 220: lcd_gotoXY((*px), (*py));
  2287  007D20  C008  FFD9         	movff	deplace@py,fsr2l
  2288  007D24  C009  FFDA         	movff	deplace@py+1,fsr2h
  2289  007D28  50DF               	movf	indf2,w,c
  2290  007D2A  6E04               	movwf	lcd_gotoXY@y^0,c
  2291  007D2C  C006  FFD9         	movff	deplace@px,fsr2l
  2292  007D30  C007  FFDA         	movff	deplace@px+1,fsr2h
  2293  007D34  50DF               	movf	indf2,w,c
  2294  007D36  ECEA  F039         	call	_lcd_gotoXY
  2295  007D3A  EF9F  F03E         	goto	l139
  2296  007D3E                     l133:
  2297  007D3E                     l139:
  2298  007D3E  0012               	return		;funcret
  2299  007D40                     __end_of_deplace:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _getAnalog *****************
  2303 ;; Defined at:
  2304 ;;		line 291 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  canal           1    wreg     unsigned char 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  canal           1    1[COMRAM] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      unsigned char 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2318 ;;      Params:         0       0       0       0       0       0       0
  2319 ;;      Locals:         1       0       0       0       0       0       0
  2320 ;;      Temps:          1       0       0       0       0       0       0
  2321 ;;      Totals:         2       0       0       0       0       0       0
  2322 ;;Total ram usage:        2 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_deplace
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text15
  2332  006FF0                     __ptext15:
  2333                           	opt callstack 0
  2334  006FF0                     _getAnalog:
  2335                           	opt callstack 29
  2336                           
  2337                           ;incstack = 0
  2338                           ;getAnalog@canal stored from wreg
  2339  006FF0  6E02               	movwf	getAnalog@canal^0,c
  2340  006FF2                     
  2341                           ;main.c: 293: ADCON0bits.CHS = canal;
  2342  006FF2  C002  F001         	movff	getAnalog@canal,??_getAnalog
  2343  006FF6  4601               	rlncf	??_getAnalog^0,f,c
  2344  006FF8  4601               	rlncf	??_getAnalog^0,f,c
  2345  006FFA  50C2               	movf	194,w,c	;volatile
  2346  006FFC  1801               	xorwf	??_getAnalog^0,w,c
  2347  006FFE  0BC3               	andlw	-61
  2348  007000  1801               	xorwf	??_getAnalog^0,w,c
  2349  007002  6EC2               	movwf	194,c	;volatile
  2350  007004                     
  2351                           ;main.c: 295: ADCON0bits.GO_DONE = 1;
  2352  007004  82C2               	bsf	194,1,c	;volatile
  2353  007006                     l162:
  2354  007006  B2C2               	btfsc	194,1,c	;volatile
  2355  007008  EF08  F038         	goto	u181
  2356  00700C  EF0A  F038         	goto	u180
  2357  007010                     u181:
  2358  007010  EF03  F038         	goto	l162
  2359  007014                     u180:
  2360  007014                     
  2361                           ;main.c: 298: return ADRESH;
  2362  007014  50C4               	movf	196,w,c	;volatile
  2363  007016  0012               	return		;funcret
  2364  007018                     __end_of_getAnalog:
  2365                           	opt callstack 0
  2366                           
  2367 ;; *************** function _demine *****************
  2368 ;; Defined at:
  2369 ;;		line 234 in file "main.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  x               1    wreg     unsigned char 
  2372 ;;  y               1   12[COMRAM] unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  x               1   17[COMRAM] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      unsigned char 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2384 ;;      Params:         1       0       0       0       0       0       0
  2385 ;;      Locals:         1       0       0       0       0       0       0
  2386 ;;      Temps:          4       0       0       0       0       0       0
  2387 ;;      Totals:         6       0       0       0       0       0       0
  2388 ;;Total ram usage:        6 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    6
  2391 ;; This function calls:
  2392 ;;		_afficheTabVue
  2393 ;;		_enleveTuilesAutour
  2394 ;;		_lcd_gotoXY
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text16
  2401  0077F2                     __ptext16:
  2402                           	opt callstack 0
  2403  0077F2                     _demine:
  2404                           	opt callstack 24
  2405                           
  2406                           ;incstack = 0
  2407                           ;demine@x stored from wreg
  2408  0077F2  6E12               	movwf	demine@x^0,c
  2409  0077F4                     l142:
  2410  0077F4  A281               	btfss	129,1,c	;volatile
  2411  0077F6  EFFF  F03B         	goto	u971
  2412  0077FA  EF01  F03C         	goto	u970
  2413  0077FE                     u971:
  2414  0077FE  EFFA  F03B         	goto	l142
  2415  007802                     u970:
  2416  007802                     
  2417                           ;main.c: 238: x--;
  2418  007802  0612               	decf	demine@x^0,f,c
  2419  007804                     
  2420                           ;main.c: 239: y--;
  2421  007804  060D               	decf	demine@y^0,f,c
  2422  007806                     
  2423                           ;main.c: 241: if(m_tabMines[y][x] == 3){
  2424  007806  500D               	movf	demine@y^0,w,c
  2425  007808  0D15               	mullw	21
  2426  00780A  0E60               	movlw	low _m_tabMines
  2427  00780C  6E0E               	movwf	??_demine^0,c
  2428  00780E  0E00               	movlw	high _m_tabMines
  2429  007810  6E0F               	movwf	(??_demine+1)^0,c
  2430  007812  50F3               	movf	243,w,c
  2431  007814  260E               	addwf	??_demine^0,f,c
  2432  007816  50F4               	movf	244,w,c
  2433  007818  220F               	addwfc	(??_demine+1)^0,f,c
  2434  00781A  5012               	movf	demine@x^0,w,c
  2435  00781C  240E               	addwf	??_demine^0,w,c
  2436  00781E  6ED9               	movwf	fsr2l,c
  2437  007820  0E00               	movlw	0
  2438  007822  200F               	addwfc	(??_demine+1)^0,w,c
  2439  007824  6EDA               	movwf	fsr2h,c
  2440  007826  0E03               	movlw	3
  2441  007828  18DE               	xorwf	postinc2,w,c
  2442  00782A  A4D8               	btfss	status,2,c
  2443  00782C  EF1A  F03C         	goto	u981
  2444  007830  EF1C  F03C         	goto	u980
  2445  007834                     u981:
  2446  007834  EF23  F03C         	goto	l2096
  2447  007838                     u980:
  2448  007838                     
  2449                           ;main.c: 242: lcd_gotoXY(x+1, y+1);
  2450  007838  280D               	incf	demine@y^0,w,c
  2451  00783A  6E04               	movwf	lcd_gotoXY@y^0,c
  2452  00783C  2812               	incf	demine@x^0,w,c
  2453  00783E  ECEA  F039         	call	_lcd_gotoXY
  2454  007842  EF84  F03C         	goto	l146
  2455  007846                     l2096:
  2456                           
  2457                           ;main.c: 244: };main.c: 245: if(m_tabMines[y][x] == 32){
  2458  007846  500D               	movf	demine@y^0,w,c
  2459  007848  0D15               	mullw	21
  2460  00784A  0E60               	movlw	low _m_tabMines
  2461  00784C  6E0E               	movwf	??_demine^0,c
  2462  00784E  0E00               	movlw	high _m_tabMines
  2463  007850  6E0F               	movwf	(??_demine+1)^0,c
  2464  007852  50F3               	movf	243,w,c
  2465  007854  260E               	addwf	??_demine^0,f,c
  2466  007856  50F4               	movf	244,w,c
  2467  007858  220F               	addwfc	(??_demine+1)^0,f,c
  2468  00785A  5012               	movf	demine@x^0,w,c
  2469  00785C  240E               	addwf	??_demine^0,w,c
  2470  00785E  6ED9               	movwf	fsr2l,c
  2471  007860  0E00               	movlw	0
  2472  007862  200F               	addwfc	(??_demine+1)^0,w,c
  2473  007864  6EDA               	movwf	fsr2h,c
  2474  007866  0E20               	movlw	32
  2475  007868  18DE               	xorwf	postinc2,w,c
  2476  00786A  A4D8               	btfss	status,2,c
  2477  00786C  EF3A  F03C         	goto	u991
  2478  007870  EF3C  F03C         	goto	u990
  2479  007874                     u991:
  2480  007874  EF43  F03C         	goto	l2100
  2481  007878                     u990:
  2482  007878                     
  2483                           ;main.c: 246: enleveTuilesAutour(x, y);
  2484  007878  C00D  F001         	movff	demine@y,enleveTuilesAutour@y
  2485  00787C  5012               	movf	demine@x^0,w,c
  2486  00787E  EC8D  F03A         	call	_enleveTuilesAutour
  2487                           
  2488                           ;main.c: 247: }else if(m_tabMines[y][x] >= 48){
  2489  007882  EF7D  F03C         	goto	l2104
  2490  007886                     l2100:
  2491  007886  500D               	movf	demine@y^0,w,c
  2492  007888  0D15               	mullw	21
  2493  00788A  0E60               	movlw	low _m_tabMines
  2494  00788C  6E0E               	movwf	??_demine^0,c
  2495  00788E  0E00               	movlw	high _m_tabMines
  2496  007890  6E0F               	movwf	(??_demine+1)^0,c
  2497  007892  50F3               	movf	243,w,c
  2498  007894  260E               	addwf	??_demine^0,f,c
  2499  007896  50F4               	movf	244,w,c
  2500  007898  220F               	addwfc	(??_demine+1)^0,f,c
  2501  00789A  5012               	movf	demine@x^0,w,c
  2502  00789C  240E               	addwf	??_demine^0,w,c
  2503  00789E  6ED9               	movwf	fsr2l,c
  2504  0078A0  0E00               	movlw	0
  2505  0078A2  200F               	addwfc	(??_demine+1)^0,w,c
  2506  0078A4  6EDA               	movwf	fsr2h,c
  2507  0078A6  0E2F               	movlw	47
  2508  0078A8  64DF               	cpfsgt	indf2,c
  2509  0078AA  EF59  F03C         	goto	u1001
  2510  0078AE  EF5B  F03C         	goto	u1000
  2511  0078B2                     u1001:
  2512  0078B2  EF7D  F03C         	goto	l2104
  2513  0078B6                     u1000:
  2514  0078B6                     
  2515                           ;main.c: 248: m_tabVue[y][x] = m_tabMines[y][x];
  2516  0078B6  500D               	movf	demine@y^0,w,c
  2517  0078B8  0D15               	mullw	21
  2518  0078BA  0E60               	movlw	low _m_tabMines
  2519  0078BC  6E0E               	movwf	??_demine^0,c
  2520  0078BE  0E00               	movlw	high _m_tabMines
  2521  0078C0  6E0F               	movwf	(??_demine+1)^0,c
  2522  0078C2  50F3               	movf	243,w,c
  2523  0078C4  260E               	addwf	??_demine^0,f,c
  2524  0078C6  50F4               	movf	244,w,c
  2525  0078C8  220F               	addwfc	(??_demine+1)^0,f,c
  2526  0078CA  5012               	movf	demine@x^0,w,c
  2527  0078CC  240E               	addwf	??_demine^0,w,c
  2528  0078CE  6ED9               	movwf	fsr2l,c
  2529  0078D0  0E00               	movlw	0
  2530  0078D2  200F               	addwfc	(??_demine+1)^0,w,c
  2531  0078D4  6EDA               	movwf	fsr2h,c
  2532  0078D6  500D               	movf	demine@y^0,w,c
  2533  0078D8  0D15               	mullw	21
  2534  0078DA  0E00               	movlw	low _m_tabVue
  2535  0078DC  6E10               	movwf	(??_demine+2)^0,c
  2536  0078DE  0E01               	movlw	high _m_tabVue
  2537  0078E0  6E11               	movwf	(??_demine+3)^0,c
  2538  0078E2  50F3               	movf	243,w,c
  2539  0078E4  2610               	addwf	(??_demine+2)^0,f,c
  2540  0078E6  50F4               	movf	244,w,c
  2541  0078E8  2211               	addwfc	(??_demine+3)^0,f,c
  2542  0078EA  5012               	movf	demine@x^0,w,c
  2543  0078EC  2410               	addwf	(??_demine+2)^0,w,c
  2544  0078EE  6EE1               	movwf	fsr1l,c
  2545  0078F0  0E00               	movlw	0
  2546  0078F2  2011               	addwfc	(??_demine+3)^0,w,c
  2547  0078F4  6EE2               	movwf	fsr1h,c
  2548  0078F6  CFDF FFE7          	movff	indf2,indf1
  2549  0078FA                     l2104:
  2550                           
  2551                           ;main.c: 249: };main.c: 250: afficheTabVue();
  2552  0078FA  ECF9  F038         	call	_afficheTabVue	;wreg free
  2553  0078FE                     
  2554                           ;main.c: 251: lcd_gotoXY(x+1, y+1);
  2555  0078FE  280D               	incf	demine@y^0,w,c
  2556  007900  6E04               	movwf	lcd_gotoXY@y^0,c
  2557  007902  2812               	incf	demine@x^0,w,c
  2558  007904  ECEA  F039         	call	_lcd_gotoXY
  2559  007908                     l146:
  2560  007908  0012               	return		;funcret
  2561  00790A                     __end_of_demine:
  2562                           	opt callstack 0
  2563                           
  2564 ;; *************** function _enleveTuilesAutour *****************
  2565 ;; Defined at:
  2566 ;;		line 261 in file "main.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  x               1    wreg     unsigned char 
  2569 ;;  y               1    0[COMRAM] unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  x               1    5[COMRAM] unsigned char 
  2572 ;;  j               2   10[COMRAM] int 
  2573 ;;  i               2    8[COMRAM] int 
  2574 ;;  ligne           1    7[COMRAM] unsigned char 
  2575 ;;  colonne         1    6[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         1       0       0       0       0       0       0
  2586 ;;      Locals:         7       0       0       0       0       0       0
  2587 ;;      Temps:          4       0       0       0       0       0       0
  2588 ;;      Totals:        12       0       0       0       0       0       0
  2589 ;;Total ram usage:       12 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_demine
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text17
  2599  00751A                     __ptext17:
  2600                           	opt callstack 0
  2601  00751A                     _enleveTuilesAutour:
  2602                           	opt callstack 29
  2603                           
  2604                           ;incstack = 0
  2605                           ;enleveTuilesAutour@x stored from wreg
  2606  00751A  6E06               	movwf	enleveTuilesAutour@x^0,c
  2607  00751C                     
  2608                           ;main.c: 264: char ligne = 0;
  2609  00751C  0E00               	movlw	0
  2610  00751E  6E08               	movwf	enleveTuilesAutour@ligne^0,c
  2611  007520                     
  2612                           ;main.c: 266: for(int i = -1; i < 2; i++){
  2613  007520  6809               	setf	enleveTuilesAutour@i^0,c
  2614  007522  680A               	setf	(enleveTuilesAutour@i+1)^0,c
  2615  007524                     l152:
  2616                           
  2617                           ;main.c: 267: for(int j = -1; j < 2; j++){
  2618  007524  680B               	setf	enleveTuilesAutour@j^0,c
  2619  007526  680C               	setf	(enleveTuilesAutour@j+1)^0,c
  2620  007528                     l1826:
  2621                           
  2622                           ;main.c: 268: colonne = x + i;
  2623  007528  5006               	movf	enleveTuilesAutour@x^0,w,c
  2624  00752A  2409               	addwf	enleveTuilesAutour@i^0,w,c
  2625  00752C  6E07               	movwf	enleveTuilesAutour@colonne^0,c
  2626                           
  2627                           ;main.c: 269: ligne = y + j;
  2628  00752E  5001               	movf	enleveTuilesAutour@y^0,w,c
  2629  007530  240B               	addwf	enleveTuilesAutour@j^0,w,c
  2630  007532  6E08               	movwf	enleveTuilesAutour@ligne^0,c
  2631  007534                     
  2632                           ;main.c: 270: m_tabVue[ligne][colonne] = m_tabMines[ligne][colonne];
  2633  007534  5008               	movf	enleveTuilesAutour@ligne^0,w,c
  2634  007536  0D15               	mullw	21
  2635  007538  0E60               	movlw	low _m_tabMines
  2636  00753A  6E02               	movwf	??_enleveTuilesAutour^0,c
  2637  00753C  0E00               	movlw	high _m_tabMines
  2638  00753E  6E03               	movwf	(??_enleveTuilesAutour+1)^0,c
  2639  007540  50F3               	movf	243,w,c
  2640  007542  2602               	addwf	??_enleveTuilesAutour^0,f,c
  2641  007544  50F4               	movf	244,w,c
  2642  007546  2203               	addwfc	(??_enleveTuilesAutour+1)^0,f,c
  2643  007548  5007               	movf	enleveTuilesAutour@colonne^0,w,c
  2644  00754A  2402               	addwf	??_enleveTuilesAutour^0,w,c
  2645  00754C  6ED9               	movwf	fsr2l,c
  2646  00754E  0E00               	movlw	0
  2647  007550  2003               	addwfc	(??_enleveTuilesAutour+1)^0,w,c
  2648  007552  6EDA               	movwf	fsr2h,c
  2649  007554  5008               	movf	enleveTuilesAutour@ligne^0,w,c
  2650  007556  0D15               	mullw	21
  2651  007558  0E00               	movlw	low _m_tabVue
  2652  00755A  6E04               	movwf	(??_enleveTuilesAutour+2)^0,c
  2653  00755C  0E01               	movlw	high _m_tabVue
  2654  00755E  6E05               	movwf	(??_enleveTuilesAutour+3)^0,c
  2655  007560  50F3               	movf	243,w,c
  2656  007562  2604               	addwf	(??_enleveTuilesAutour+2)^0,f,c
  2657  007564  50F4               	movf	244,w,c
  2658  007566  2205               	addwfc	(??_enleveTuilesAutour+3)^0,f,c
  2659  007568  5007               	movf	enleveTuilesAutour@colonne^0,w,c
  2660  00756A  2404               	addwf	(??_enleveTuilesAutour+2)^0,w,c
  2661  00756C  6EE1               	movwf	fsr1l,c
  2662  00756E  0E00               	movlw	0
  2663  007570  2005               	addwfc	(??_enleveTuilesAutour+3)^0,w,c
  2664  007572  6EE2               	movwf	fsr1h,c
  2665  007574  CFDF FFE7          	movff	indf2,indf1
  2666  007578  4A0B               	infsnz	enleveTuilesAutour@j^0,f,c
  2667  00757A  2A0C               	incf	(enleveTuilesAutour@j+1)^0,f,c
  2668  00757C  BE0C               	btfsc	(enleveTuilesAutour@j+1)^0,7,c
  2669  00757E  EFCA  F03A         	goto	u701
  2670  007582  500C               	movf	(enleveTuilesAutour@j+1)^0,w,c
  2671  007584  E109               	bnz	u700
  2672  007586  0E02               	movlw	2
  2673  007588  5C0B               	subwf	enleveTuilesAutour@j^0,w,c
  2674  00758A  A0D8               	btfss	status,0,c
  2675  00758C  EFCA  F03A         	goto	u701
  2676  007590  EFCC  F03A         	goto	u700
  2677  007594                     u701:
  2678  007594  EF94  F03A         	goto	l1826
  2679  007598                     u700:
  2680  007598  4A09               	infsnz	enleveTuilesAutour@i^0,f,c
  2681  00759A  2A0A               	incf	(enleveTuilesAutour@i+1)^0,f,c
  2682  00759C  BE0A               	btfsc	(enleveTuilesAutour@i+1)^0,7,c
  2683  00759E  EFDA  F03A         	goto	u711
  2684  0075A2  500A               	movf	(enleveTuilesAutour@i+1)^0,w,c
  2685  0075A4  E109               	bnz	u710
  2686  0075A6  0E02               	movlw	2
  2687  0075A8  5C09               	subwf	enleveTuilesAutour@i^0,w,c
  2688  0075AA  A0D8               	btfss	status,0,c
  2689  0075AC  EFDA  F03A         	goto	u711
  2690  0075B0  EFDC  F03A         	goto	u710
  2691  0075B4                     u711:
  2692  0075B4  EF92  F03A         	goto	l152
  2693  0075B8                     u710:
  2694  0075B8  0012               	return		;funcret
  2695  0075BA                     __end_of_enleveTuilesAutour:
  2696                           	opt callstack 0
  2697                           
  2698 ;; *************** function _afficheTabVue *****************
  2699 ;; Defined at:
  2700 ;;		line 80 in file "main.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  i               2    9[COMRAM] int 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2714 ;;      Params:         0       0       0       0       0       0       0
  2715 ;;      Locals:         2       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0
  2717 ;;      Totals:         2       0       0       0       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    5
  2721 ;; This function calls:
  2722 ;;		___wmul
  2723 ;;		_lcd_effaceAffichage
  2724 ;;		_lcd_gotoXY
  2725 ;;		_lcd_putMessage
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;;		_demine
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text18
  2733  0071F2                     __ptext18:
  2734                           	opt callstack 0
  2735  0071F2                     _afficheTabVue:
  2736                           	opt callstack 24
  2737  0071F2                     
  2738                           ;main.c: 81: lcd_effaceAffichage();
  2739  0071F2  ECCD  F037         	call	_lcd_effaceAffichage	;wreg free
  2740  0071F6                     
  2741                           ;main.c: 82: for(int i = 0; i < 4; i++){
  2742  0071F6  0E00               	movlw	0
  2743  0071F8  6E0B               	movwf	(afficheTabVue@i+1)^0,c
  2744  0071FA  0E00               	movlw	0
  2745  0071FC  6E0A               	movwf	afficheTabVue@i^0,c
  2746  0071FE                     l1754:
  2747                           
  2748                           ;main.c: 83: lcd_gotoXY(1, i+1);
  2749  0071FE  280A               	incf	afficheTabVue@i^0,w,c
  2750  007200  6E04               	movwf	lcd_gotoXY@y^0,c
  2751  007202  0E01               	movlw	1
  2752  007204  ECEA  F039         	call	_lcd_gotoXY
  2753  007208                     
  2754                           ;main.c: 84: lcd_putMessage(m_tabVue[i]);
  2755  007208  C00A  F001         	movff	afficheTabVue@i,___wmul@multiplier
  2756  00720C  C00B  F002         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  2757  007210  0E00               	movlw	0
  2758  007212  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2759  007214  0E15               	movlw	21
  2760  007216  6E03               	movwf	___wmul@multiplicand^0,c
  2761  007218  ECE5  F037         	call	___wmul	;wreg free
  2762  00721C  0E00               	movlw	low _m_tabVue
  2763  00721E  2401               	addwf	?___wmul^0,w,c
  2764  007220  6E07               	movwf	lcd_putMessage@chaine^0,c
  2765  007222  0E01               	movlw	high _m_tabVue
  2766  007224  2002               	addwfc	(?___wmul+1)^0,w,c
  2767  007226  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  2768  007228  EC6D  F038         	call	_lcd_putMessage	;wreg free
  2769  00722C  4A0A               	infsnz	afficheTabVue@i^0,f,c
  2770  00722E  2A0B               	incf	(afficheTabVue@i+1)^0,f,c
  2771  007230  BE0B               	btfsc	(afficheTabVue@i+1)^0,7,c
  2772  007232  EF24  F039         	goto	u591
  2773  007236  500B               	movf	(afficheTabVue@i+1)^0,w,c
  2774  007238  E109               	bnz	u590
  2775  00723A  0E04               	movlw	4
  2776  00723C  5C0A               	subwf	afficheTabVue@i^0,w,c
  2777  00723E  A0D8               	btfss	status,0,c
  2778  007240  EF24  F039         	goto	u591
  2779  007244  EF26  F039         	goto	u590
  2780  007248                     u591:
  2781  007248  EFFF  F038         	goto	l1754
  2782  00724C                     u590:
  2783  00724C  0012               	return		;funcret
  2784  00724E                     __end_of_afficheTabVue:
  2785                           	opt callstack 0
  2786                           
  2787 ;; *************** function _lcd_putMessage *****************
  2788 ;; Defined at:
  2789 ;;		line 411 in file "Lcd4Lignes.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  chaine          2    6[COMRAM] PTR const unsigned char 
  2792 ;;		 -> m_tabMines(84), m_tabVue(84), 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  j               1    8[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2804 ;;      Params:         2       0       0       0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0
  2807 ;;      Totals:         3       0       0       0       0       0       0
  2808 ;;Total ram usage:        3 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    4
  2811 ;; This function calls:
  2812 ;;		_lcd_ecritChar
  2813 ;; This function is called by:
  2814 ;;		_afficheTabVue
  2815 ;;		_afficheTabMine
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text19
  2820  0070DA                     __ptext19:
  2821                           	opt callstack 0
  2822  0070DA                     _lcd_putMessage:
  2823                           	opt callstack 24
  2824  0070DA                     
  2825                           ;Lcd4Lignes.c: 413: unsigned char j;;Lcd4Lignes.c: 415: for(j = 0; chaine[j] != 0; j++)
  2826  0070DA  0E00               	movlw	0
  2827  0070DC  6E09               	movwf	lcd_putMessage@j^0,c
  2828  0070DE  EF7B  F038         	goto	l1728
  2829  0070E2                     l1724:
  2830                           
  2831                           ;Lcd4Lignes.c: 416: lcd_ecritChar(chaine[j]);
  2832  0070E2  5009               	movf	lcd_putMessage@j^0,w,c
  2833  0070E4  2407               	addwf	lcd_putMessage@chaine^0,w,c
  2834  0070E6  6ED9               	movwf	fsr2l,c
  2835  0070E8  0E00               	movlw	0
  2836  0070EA  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  2837  0070EC  6EDA               	movwf	fsr2h,c
  2838  0070EE  50DF               	movf	indf2,w,c
  2839  0070F0  ECAA  F038         	call	_lcd_ecritChar
  2840  0070F4  2A09               	incf	lcd_putMessage@j^0,f,c
  2841  0070F6                     l1728:
  2842  0070F6  5009               	movf	lcd_putMessage@j^0,w,c
  2843  0070F8  2407               	addwf	lcd_putMessage@chaine^0,w,c
  2844  0070FA  6ED9               	movwf	fsr2l,c
  2845  0070FC  0E00               	movlw	0
  2846  0070FE  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  2847  007100  6EDA               	movwf	fsr2h,c
  2848  007102  50DF               	movf	indf2,w,c
  2849  007104  A4D8               	btfss	status,2,c
  2850  007106  EF87  F038         	goto	u561
  2851  00710A  EF89  F038         	goto	u560
  2852  00710E                     u561:
  2853  00710E  EF71  F038         	goto	l1724
  2854  007112                     u560:
  2855  007112  0012               	return		;funcret
  2856  007114                     __end_of_lcd_putMessage:
  2857                           	opt callstack 0
  2858                           
  2859 ;; *************** function _lcd_ecritChar *****************
  2860 ;; Defined at:
  2861 ;;		line 383 in file "Lcd4Lignes.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  car             1    wreg     unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  car             1    3[COMRAM] unsigned char 
  2866 ;;  posRam          1    4[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2876 ;;      Params:         0       0       0       0       0       0       0
  2877 ;;      Locals:         2       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0
  2879 ;;      Totals:         2       0       0       0       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    3
  2883 ;; This function calls:
  2884 ;;		_lcd_wrCom
  2885 ;;		_lcd_wrData
  2886 ;; This function is called by:
  2887 ;;		_lcd_putMessage
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text20
  2892  007154                     __ptext20:
  2893                           	opt callstack 0
  2894  007154                     _lcd_ecritChar:
  2895                           	opt callstack 24
  2896                           
  2897                           ;incstack = 0
  2898                           ;lcd_ecritChar@car stored from wreg
  2899  007154  6E04               	movwf	lcd_ecritChar@car^0,c
  2900  007156                     
  2901                           ;Lcd4Lignes.c: 385: unsigned char posRam;;Lcd4Lignes.c: 387: posRam = lcd_wrData(car);
  2902  007156  5004               	movf	lcd_ecritChar@car^0,w,c
  2903  007158  EC20  F038         	call	_lcd_wrData
  2904  00715C  6E05               	movwf	lcd_ecritChar@posRam^0,c
  2905                           
  2906                           ;Lcd4Lignes.c: 388: switch(posRam)
  2907  00715E  EFC0  F038         	goto	l1702
  2908  007162                     l1694:
  2909                           
  2910                           ;Lcd4Lignes.c: 391: lcd_wrCom(0xC0|0x80);
  2911  007162  0EC0               	movlw	192
  2912  007164  EC56  F039         	call	_lcd_wrCom
  2913                           
  2914                           ;Lcd4Lignes.c: 392: break;
  2915  007168  EFCF  F038         	goto	l242
  2916  00716C                     l1696:
  2917                           
  2918                           ;Lcd4Lignes.c: 394: lcd_wrCom(0x94|0x80);
  2919  00716C  0E94               	movlw	148
  2920  00716E  EC56  F039         	call	_lcd_wrCom
  2921                           
  2922                           ;Lcd4Lignes.c: 395: break;
  2923  007172  EFCF  F038         	goto	l242
  2924  007176                     l1698:
  2925                           
  2926                           ;Lcd4Lignes.c: 397: lcd_wrCom(0xD4|0x80);
  2927  007176  0ED4               	movlw	212
  2928  007178  EC56  F039         	call	_lcd_wrCom
  2929                           
  2930                           ;Lcd4Lignes.c: 398: break;
  2931  00717C  EFCF  F038         	goto	l242
  2932  007180                     l1702:
  2933  007180  5005               	movf	lcd_ecritChar@posRam^0,w,c
  2934                           
  2935                           ; Switch size 1, requested type "simple"
  2936                           ; Number of cases is 3, Range of values is 148 to 212
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte           10     6 (average)
  2940                           ;	Chosen strategy is simple_byte
  2941  007182  0A94               	xorlw	148	; case 148
  2942  007184  B4D8               	btfsc	status,2,c
  2943  007186  EFB1  F038         	goto	l1694
  2944  00718A  0A54               	xorlw	84	; case 192
  2945  00718C  B4D8               	btfsc	status,2,c
  2946  00718E  EFBB  F038         	goto	l1698
  2947  007192  0A14               	xorlw	20	; case 212
  2948  007194  B4D8               	btfsc	status,2,c
  2949  007196  EFB6  F038         	goto	l1696
  2950  00719A  EFCF  F038         	goto	l242
  2951  00719E                     l242:
  2952  00719E  0012               	return		;funcret
  2953  0071A0                     __end_of_lcd_ecritChar:
  2954                           	opt callstack 0
  2955                           
  2956 ;; *************** function _lcd_wrData *****************
  2957 ;; Defined at:
  2958 ;;		line 212 in file "Lcd4Lignes.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  caractere       1    wreg     unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  caractere       1    2[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2972 ;;      Params:         0       0       0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0
  2975 ;;      Totals:         1       0       0       0       0       0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    2
  2979 ;; This function calls:
  2980 ;;		_lcd_busy
  2981 ;;		_lcd_ecrireDonnees
  2982 ;;		_lcd_strobeEnableBit
  2983 ;; This function is called by:
  2984 ;;		_lcd_ecritChar
  2985 ;;		_lcd_initCGRam
  2986 ;;		_lcd_effaceChar
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text21
  2991  007040                     __ptext21:
  2992                           	opt callstack 0
  2993  007040                     _lcd_wrData:
  2994                           	opt callstack 26
  2995                           
  2996                           ;incstack = 0
  2997                           ;lcd_wrData@caractere stored from wreg
  2998  007040  6E03               	movwf	lcd_wrData@caractere^0,c
  2999  007042                     
  3000                           ;Lcd4Lignes.c: 214: lcd_busy();
  3001  007042  EC51  F038         	call	_lcd_busy	;wreg free
  3002  007046                     
  3003                           ;Lcd4Lignes.c: 215: TRISD = 0b00000000;
  3004  007046  0E00               	movlw	0
  3005  007048  6E95               	movwf	149,c	;volatile
  3006  00704A                     
  3007                           ;Lcd4Lignes.c: 218: PORTAbits.RA0 = 1;
  3008  00704A  8080               	bsf	128,0,c	;volatile
  3009  00704C                     
  3010                           ;Lcd4Lignes.c: 219: PORTAbits.RA1 = 0;
  3011  00704C  9280               	bcf	128,1,c	;volatile
  3012  00704E                     
  3013                           ;Lcd4Lignes.c: 221: lcd_ecrireDonnees(caractere >> 4);
  3014  00704E  3803               	swapf	lcd_wrData@caractere^0,w,c
  3015  007050  0B0F               	andlw	15
  3016  007052  ECDB  F037         	call	_lcd_ecrireDonnees
  3017  007056                     
  3018                           ;Lcd4Lignes.c: 222: lcd_strobeEnableBit();
  3019  007056  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  3020  00705A                     
  3021                           ;Lcd4Lignes.c: 225: lcd_ecrireDonnees(caractere);
  3022  00705A  5003               	movf	lcd_wrData@caractere^0,w,c
  3023  00705C  ECDB  F037         	call	_lcd_ecrireDonnees
  3024  007060                     
  3025                           ;Lcd4Lignes.c: 226: lcd_strobeEnableBit();
  3026  007060  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  3027  007064                     
  3028                           ;Lcd4Lignes.c: 229: TRISD = 0b00001111;
  3029  007064  0E0F               	movlw	15
  3030  007066  6E95               	movwf	149,c	;volatile
  3031  007068                     
  3032                           ;Lcd4Lignes.c: 230: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3033                           ;Lcd4Lignes.c: 231: return(lcd_busy());
  3034  007068  EC51  F038         	call	_lcd_busy	;wreg free
  3035  00706C  0012               	return		;funcret
  3036  00706E                     __end_of_lcd_wrData:
  3037                           	opt callstack 0
  3038                           
  3039 ;; *************** function _lcd_gotoXY *****************
  3040 ;; Defined at:
  3041 ;;		line 338 in file "Lcd4Lignes.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  x               1    wreg     unsigned char 
  3044 ;;  y               1    3[COMRAM] unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  x               1    4[COMRAM] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3056 ;;      Params:         1       0       0       0       0       0       0
  3057 ;;      Locals:         1       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0
  3059 ;;      Totals:         2       0       0       0       0       0       0
  3060 ;;Total ram usage:        2 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    3
  3063 ;; This function calls:
  3064 ;;		_lcd_wrCom
  3065 ;; This function is called by:
  3066 ;;		_afficheTabVue
  3067 ;;		_deplace
  3068 ;;		_demine
  3069 ;;		_afficheTabMine
  3070 ;;		_lcd_effaceLigne
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text22
  3075  0073D4                     __ptext22:
  3076                           	opt callstack 0
  3077  0073D4                     _lcd_gotoXY:
  3078                           	opt callstack 26
  3079                           
  3080                           ;incstack = 0
  3081                           ;lcd_gotoXY@x stored from wreg
  3082  0073D4  6E05               	movwf	lcd_gotoXY@x^0,c
  3083  0073D6                     
  3084                           ;Lcd4Lignes.c: 340: switch(y)
  3085  0073D6  EF09  F03A         	goto	l1720
  3086  0073DA                     l1710:
  3087                           
  3088                           ;Lcd4Lignes.c: 343: lcd_wrCom((x-1+0x80)|0x80);
  3089  0073DA  5005               	movf	lcd_gotoXY@x^0,w,c
  3090  0073DC  0F7F               	addlw	127
  3091  0073DE  0980               	iorlw	128
  3092  0073E0  EC56  F039         	call	_lcd_wrCom
  3093                           
  3094                           ;Lcd4Lignes.c: 344: break;
  3095  0073E4  EF1C  F03A         	goto	l231
  3096  0073E8                     l1712:
  3097                           
  3098                           ;Lcd4Lignes.c: 346: lcd_wrCom((x-1+0xC0)|0x80);
  3099  0073E8  5005               	movf	lcd_gotoXY@x^0,w,c
  3100  0073EA  0FBF               	addlw	191
  3101  0073EC  0980               	iorlw	128
  3102  0073EE  EC56  F039         	call	_lcd_wrCom
  3103                           
  3104                           ;Lcd4Lignes.c: 347: break;
  3105  0073F2  EF1C  F03A         	goto	l231
  3106  0073F6                     l1714:
  3107                           
  3108                           ;Lcd4Lignes.c: 349: lcd_wrCom((x-1+0x94)|0x80);
  3109  0073F6  5005               	movf	lcd_gotoXY@x^0,w,c
  3110  0073F8  0F93               	addlw	147
  3111  0073FA  0980               	iorlw	128
  3112  0073FC  EC56  F039         	call	_lcd_wrCom
  3113                           
  3114                           ;Lcd4Lignes.c: 350: break;
  3115  007400  EF1C  F03A         	goto	l231
  3116  007404                     l1716:
  3117                           
  3118                           ;Lcd4Lignes.c: 352: lcd_wrCom((x-1+0xD4)|0x80);
  3119  007404  5005               	movf	lcd_gotoXY@x^0,w,c
  3120  007406  0FD3               	addlw	211
  3121  007408  0980               	iorlw	128
  3122  00740A  EC56  F039         	call	_lcd_wrCom
  3123                           
  3124                           ;Lcd4Lignes.c: 353: break;
  3125  00740E  EF1C  F03A         	goto	l231
  3126  007412                     l1720:
  3127  007412  5004               	movf	lcd_gotoXY@y^0,w,c
  3128                           
  3129                           ; Switch size 1, requested type "simple"
  3130                           ; Number of cases is 4, Range of values is 1 to 4
  3131                           ; switch strategies available:
  3132                           ; Name         Instructions Cycles
  3133                           ; simple_byte           13     7 (average)
  3134                           ;	Chosen strategy is simple_byte
  3135  007414  0A01               	xorlw	1	; case 1
  3136  007416  B4D8               	btfsc	status,2,c
  3137  007418  EFED  F039         	goto	l1710
  3138  00741C  0A03               	xorlw	3	; case 2
  3139  00741E  B4D8               	btfsc	status,2,c
  3140  007420  EFF4  F039         	goto	l1712
  3141  007424  0A01               	xorlw	1	; case 3
  3142  007426  B4D8               	btfsc	status,2,c
  3143  007428  EFFB  F039         	goto	l1714
  3144  00742C  0A07               	xorlw	7	; case 4
  3145  00742E  B4D8               	btfsc	status,2,c
  3146  007430  EF02  F03A         	goto	l1716
  3147  007434  EF1C  F03A         	goto	l231
  3148  007438                     l231:
  3149  007438  0012               	return		;funcret
  3150  00743A                     __end_of_lcd_gotoXY:
  3151                           	opt callstack 0
  3152                           
  3153 ;; *************** function _lcd_effaceAffichage *****************
  3154 ;; Defined at:
  3155 ;;		line 300 in file "Lcd4Lignes.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3169 ;;      Params:         0       0       0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0
  3172 ;;      Totals:         0       0       0       0       0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    3
  3176 ;; This function calls:
  3177 ;;		_lcd_wrCom
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;;		_afficheTabVue
  3181 ;;		_afficheTabMine
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text23
  3186  006F9A                     __ptext23:
  3187                           	opt callstack 0
  3188  006F9A                     _lcd_effaceAffichage:
  3189                           	opt callstack 27
  3190  006F9A                     
  3191                           ;Lcd4Lignes.c: 302: lcd_wrCom(0x01);
  3192  006F9A  0E01               	movlw	1
  3193  006F9C  EC56  F039         	call	_lcd_wrCom
  3194                           
  3195                           ;Lcd4Lignes.c: 303: lcd_wrCom(0x80);
  3196  006FA0  0E80               	movlw	128
  3197  006FA2  EC56  F039         	call	_lcd_wrCom
  3198  006FA6  0012               	return		;funcret
  3199  006FA8                     __end_of_lcd_effaceAffichage:
  3200                           	opt callstack 0
  3201                           
  3202 ;; *************** function _lcd_wrCom *****************
  3203 ;; Defined at:
  3204 ;;		line 180 in file "Lcd4Lignes.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  commande        1    wreg     unsigned char 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  commande        1    2[COMRAM] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      unsigned char 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3218 ;;      Params:         0       0       0       0       0       0       0
  3219 ;;      Locals:         1       0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0
  3221 ;;      Totals:         1       0       0       0       0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    2
  3225 ;; This function calls:
  3226 ;;		_lcd_busy
  3227 ;;		_lcd_ecrireDonnees
  3228 ;;		_lcd_strobeEnableBit
  3229 ;; This function is called by:
  3230 ;;		_lcd_init
  3231 ;;		_lcd_effaceAffichage
  3232 ;;		_lcd_curseurHome
  3233 ;;		_lcd_gotoXY
  3234 ;;		_lcd_ecritChar
  3235 ;;		_lcd_initCGRam
  3236 ;;		_lcd_cacheCurseur
  3237 ;;		_lcd_montreCurseur
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text24
  3242  0072AC                     __ptext24:
  3243                           	opt callstack 0
  3244  0072AC                     _lcd_wrCom:
  3245                           	opt callstack 27
  3246                           
  3247                           ;incstack = 0
  3248                           ;lcd_wrCom@commande stored from wreg
  3249  0072AC  6E03               	movwf	lcd_wrCom@commande^0,c
  3250  0072AE                     
  3251                           ;Lcd4Lignes.c: 182: lcd_busy();
  3252  0072AE  EC51  F038         	call	_lcd_busy	;wreg free
  3253  0072B2                     
  3254                           ;Lcd4Lignes.c: 184: TRISD = 0b00000000;
  3255  0072B2  0E00               	movlw	0
  3256  0072B4  6E95               	movwf	149,c	;volatile
  3257  0072B6                     
  3258                           ;Lcd4Lignes.c: 187: PORTAbits.RA0 = 0;
  3259  0072B6  9080               	bcf	128,0,c	;volatile
  3260  0072B8                     
  3261                           ;Lcd4Lignes.c: 188: PORTAbits.RA1 = 0;
  3262  0072B8  9280               	bcf	128,1,c	;volatile
  3263  0072BA                     
  3264                           ;Lcd4Lignes.c: 190: lcd_ecrireDonnees(commande >> 4);
  3265  0072BA  3803               	swapf	lcd_wrCom@commande^0,w,c
  3266  0072BC  0B0F               	andlw	15
  3267  0072BE  ECDB  F037         	call	_lcd_ecrireDonnees
  3268  0072C2                     
  3269                           ;Lcd4Lignes.c: 191: lcd_strobeEnableBit();
  3270  0072C2  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  3271  0072C6                     
  3272                           ;Lcd4Lignes.c: 194: lcd_ecrireDonnees(commande);
  3273  0072C6  5003               	movf	lcd_wrCom@commande^0,w,c
  3274  0072C8  ECDB  F037         	call	_lcd_ecrireDonnees
  3275  0072CC                     
  3276                           ;Lcd4Lignes.c: 195: lcd_strobeEnableBit();
  3277  0072CC  ECC5  F037         	call	_lcd_strobeEnableBit	;wreg free
  3278  0072D0                     
  3279                           ;Lcd4Lignes.c: 196: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3280  0072D0  0E03               	movlw	3
  3281  0072D2                     u1107:
  3282  0072D2  2EE8               	decfsz	wreg,f,c
  3283  0072D4  D7FE               	bra	u1107
  3284  0072D6  F000               	nop	
  3285  0072D8                     
  3286                           ;Lcd4Lignes.c: 198: if ((commande == 0x01) || commande == 0x02)
  3287  0072D8  0403               	decf	lcd_wrCom@commande^0,w,c
  3288  0072DA  B4D8               	btfsc	status,2,c
  3289  0072DC  EF72  F039         	goto	u541
  3290  0072E0  EF74  F039         	goto	u540
  3291  0072E4                     u541:
  3292  0072E4  EF7D  F039         	goto	l1654
  3293  0072E8                     u540:
  3294  0072E8  0E02               	movlw	2
  3295  0072EA  1803               	xorwf	lcd_wrCom@commande^0,w,c
  3296  0072EC  A4D8               	btfss	status,2,c
  3297  0072EE  EF7B  F039         	goto	u551
  3298  0072F2  EF7D  F039         	goto	u550
  3299  0072F6                     u551:
  3300  0072F6  EF82  F039         	goto	l1656
  3301  0072FA                     u550:
  3302  0072FA                     l1654:
  3303                           
  3304                           ;Lcd4Lignes.c: 199: _delay((unsigned long)((2)*(1000000/4000.0)));
  3305  0072FA  0EA6               	movlw	166
  3306  0072FC                     u1117:
  3307  0072FC  2EE8               	decfsz	wreg,f,c
  3308  0072FE  D7FE               	bra	u1117
  3309  007300  F000 F000          	nop2	
  3310  007304                     l1656:
  3311                           
  3312                           ;Lcd4Lignes.c: 201: TRISD = 0b00001111;
  3313  007304  0E0F               	movlw	15
  3314  007306  6E95               	movwf	149,c	;volatile
  3315  007308                     
  3316                           ;Lcd4Lignes.c: 203: return(lcd_busy());;	Return value of _lcd_wrCom is never used
  3317  007308  EC51  F038         	call	_lcd_busy	;wreg free
  3318  00730C  0012               	return		;funcret
  3319  00730E                     __end_of_lcd_wrCom:
  3320                           	opt callstack 0
  3321                           
  3322 ;; *************** function _lcd_strobeEnableBit *****************
  3323 ;; Defined at:
  3324 ;;		line 455 in file "Lcd4Lignes.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		None
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3338 ;;      Params:         0       0       0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_lcd_wrCom
  3348 ;;		_lcd_wrData
  3349 ;;		_lcd_resetSequence
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text25
  3354  006F8A                     __ptext25:
  3355                           	opt callstack 0
  3356  006F8A                     _lcd_strobeEnableBit:
  3357                           	opt callstack 28
  3358  006F8A                     
  3359                           ;Lcd4Lignes.c: 457: PORTAbits.RA2 = 1;
  3360  006F8A  8480               	bsf	128,2,c	;volatile
  3361                           
  3362                           ;Lcd4Lignes.c: 458: __nop();
  3363  006F8C  F000               	nop	
  3364                           
  3365                           ;Lcd4Lignes.c: 459: PORTAbits.RA2 = 0;
  3366  006F8E  9480               	bcf	128,2,c	;volatile
  3367  006F90  0012               	return		;funcret
  3368  006F92                     __end_of_lcd_strobeEnableBit:
  3369                           	opt callstack 0
  3370                           
  3371 ;; *************** function _lcd_ecrireDonnees *****************
  3372 ;; Defined at:
  3373 ;;		line 131 in file "Lcd4Lignes.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  donnee          1    wreg     unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  donnee          1    1[COMRAM] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3387 ;;      Params:         0       0       0       0       0       0       0
  3388 ;;      Locals:         1       0       0       0       0       0       0
  3389 ;;      Temps:          1       0       0       0       0       0       0
  3390 ;;      Totals:         2       0       0       0       0       0       0
  3391 ;;Total ram usage:        2 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_lcd_wrCom
  3397 ;;		_lcd_wrData
  3398 ;;		_lcd_resetSequence
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text26
  3403  006FB6                     __ptext26:
  3404                           	opt callstack 0
  3405  006FB6                     _lcd_ecrireDonnees:
  3406                           	opt callstack 28
  3407                           
  3408                           ;incstack = 0
  3409                           ;lcd_ecrireDonnees@donnee stored from wreg
  3410  006FB6  6E02               	movwf	lcd_ecrireDonnees@donnee^0,c
  3411  006FB8                     
  3412                           ;Lcd4Lignes.c: 134: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  3413  006FB8  CF83 F001          	movff	3971,??_lcd_ecrireDonnees	;volatile
  3414  006FBC  0EF0               	movlw	240
  3415  006FBE  1601               	andwf	??_lcd_ecrireDonnees^0,f,c
  3416  006FC0  5002               	movf	lcd_ecrireDonnees@donnee^0,w,c
  3417  006FC2  0B0F               	andlw	15
  3418  006FC4  1001               	iorwf	??_lcd_ecrireDonnees^0,w,c
  3419  006FC6  6E83               	movwf	131,c	;volatile
  3420  006FC8  0012               	return		;funcret
  3421  006FCA                     __end_of_lcd_ecrireDonnees:
  3422                           	opt callstack 0
  3423                           
  3424 ;; *************** function _lcd_busy *****************
  3425 ;; Defined at:
  3426 ;;		line 148 in file "Lcd4Lignes.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  adresse         1    1[COMRAM] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      unsigned char 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3440 ;;      Params:         0       0       0       0       0       0       0
  3441 ;;      Locals:         1       0       0       0       0       0       0
  3442 ;;      Temps:          1       0       0       0       0       0       0
  3443 ;;      Totals:         2       0       0       0       0       0       0
  3444 ;;Total ram usage:        2 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    1
  3447 ;; This function calls:
  3448 ;;		_lcd_lireDonnees
  3449 ;; This function is called by:
  3450 ;;		_lcd_wrCom
  3451 ;;		_lcd_wrData
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text27
  3456  0070A2                     __ptext27:
  3457                           	opt callstack 0
  3458  0070A2                     _lcd_busy:
  3459                           	opt callstack 27
  3460  0070A2                     
  3461                           ;Lcd4Lignes.c: 150: unsigned char adresse;;Lcd4Lignes.c: 152: PORTAbits.RA0 = 0;
  3462  0070A2  9080               	bcf	128,0,c	;volatile
  3463                           
  3464                           ;Lcd4Lignes.c: 153: PORTAbits.RA1 = 1;
  3465  0070A4  8280               	bsf	128,1,c	;volatile
  3466  0070A6                     l193:
  3467                           
  3468                           ;Lcd4Lignes.c: 156: {;Lcd4Lignes.c: 157: PORTAbits.RA2 = 1;
  3469  0070A6  8480               	bsf	128,2,c	;volatile
  3470                           
  3471                           ;Lcd4Lignes.c: 158: __nop();
  3472  0070A8  F000               	nop	
  3473  0070AA                     
  3474                           ;Lcd4Lignes.c: 159: adresse = lcd_lireDonnees() << 4;
  3475  0070AA  ECC2  F037         	call	_lcd_lireDonnees	;wreg free
  3476  0070AE  6E01               	movwf	??_lcd_busy^0,c
  3477  0070B0  3801               	swapf	??_lcd_busy^0,w,c
  3478  0070B2  0BF0               	andlw	240
  3479  0070B4  6E02               	movwf	lcd_busy@adresse^0,c
  3480  0070B6                     
  3481                           ;Lcd4Lignes.c: 160: PORTAbits.RA2 = 0;
  3482  0070B6  9480               	bcf	128,2,c	;volatile
  3483  0070B8                     
  3484                           ;Lcd4Lignes.c: 162: PORTAbits.RA2 = 1;
  3485  0070B8  8480               	bsf	128,2,c	;volatile
  3486  0070BA                     
  3487                           ;Lcd4Lignes.c: 163: __nop();
  3488  0070BA  F000               	nop	
  3489                           
  3490                           ;Lcd4Lignes.c: 164: adresse |= lcd_lireDonnees();
  3491  0070BC  ECC2  F037         	call	_lcd_lireDonnees	;wreg free
  3492  0070C0  1202               	iorwf	lcd_busy@adresse^0,f,c
  3493  0070C2                     
  3494                           ;Lcd4Lignes.c: 165: PORTAbits.RA2 = 0;
  3495  0070C2  9480               	bcf	128,2,c	;volatile
  3496  0070C4                     
  3497                           ;Lcd4Lignes.c: 167: };Lcd4Lignes.c: 168: while(adresse&0x80);
  3498  0070C4  BE02               	btfsc	lcd_busy@adresse^0,7,c
  3499  0070C6  EF67  F038         	goto	u531
  3500  0070CA  EF69  F038         	goto	u530
  3501  0070CE                     u531:
  3502  0070CE  EF53  F038         	goto	l193
  3503  0070D2                     u530:
  3504  0070D2                     
  3505                           ;Lcd4Lignes.c: 170: PORTAbits.RA1 = 0;
  3506  0070D2  9280               	bcf	128,1,c	;volatile
  3507  0070D4                     
  3508                           ;Lcd4Lignes.c: 171: return(adresse&0x7f);
  3509  0070D4  5002               	movf	lcd_busy@adresse^0,w,c
  3510  0070D6  0B7F               	andlw	127
  3511  0070D8  0012               	return		;funcret
  3512  0070DA                     __end_of_lcd_busy:
  3513                           	opt callstack 0
  3514                           
  3515 ;; *************** function _lcd_lireDonnees *****************
  3516 ;; Defined at:
  3517 ;;		line 117 in file "Lcd4Lignes.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      unsigned char 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3531 ;;      Params:         0       0       0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_lcd_busy
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text28
  3545  006F84                     __ptext28:
  3546                           	opt callstack 0
  3547  006F84                     _lcd_lireDonnees:
  3548                           	opt callstack 27
  3549  006F84                     
  3550                           ;Lcd4Lignes.c: 120: return (PORTD & 0x0f);
  3551  006F84  5083               	movf	131,w,c	;volatile
  3552  006F86  0B0F               	andlw	15
  3553  006F88  0012               	return		;funcret
  3554  006F8A                     __end_of_lcd_lireDonnees:
  3555                           	opt callstack 0
  3556                           
  3557 ;; *************** function ___wmul *****************
  3558 ;; Defined at:
  3559 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  multiplier      2    0[COMRAM] unsigned int 
  3562 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  product         2    4[COMRAM] unsigned int 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  2    0[COMRAM] unsigned int 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, prodl, prodh
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3574 ;;      Params:         4       0       0       0       0       0       0
  3575 ;;      Locals:         2       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0
  3577 ;;      Totals:         6       0       0       0       0       0       0
  3578 ;;Total ram usage:        6 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_afficheTabVue
  3584 ;;		_initTabVue
  3585 ;;		_rempliMines
  3586 ;;		_metToucheCombien
  3587 ;;		_calculToucheCombien
  3588 ;;		_afficheTabMine
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text29
  3593  006FCA                     __ptext29:
  3594                           	opt callstack 0
  3595  006FCA                     ___wmul:
  3596                           	opt callstack 29
  3597  006FCA  5001               	movf	___wmul@multiplier^0,w,c
  3598  006FCC  0203               	mulwf	___wmul@multiplicand^0,c
  3599  006FCE  CFF3 F005          	movff	prodl,___wmul@product
  3600  006FD2  CFF4 F006          	movff	prodh,___wmul@product+1
  3601  006FD6  5001               	movf	___wmul@multiplier^0,w,c
  3602  006FD8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3603  006FDA  50F3               	movf	243,w,c
  3604  006FDC  2606               	addwf	(___wmul@product+1)^0,f,c
  3605  006FDE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3606  006FE0  0203               	mulwf	___wmul@multiplicand^0,c
  3607  006FE2  50F3               	movf	243,w,c
  3608  006FE4  2606               	addwf	(___wmul@product+1)^0,f,c
  3609  006FE6  C005  F001         	movff	___wmul@product,?___wmul
  3610  006FEA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3611  006FEE  0012               	return		;funcret
  3612  006FF0                     __end_of___wmul:
  3613                           	opt callstack 0
  3614  0000                     
  3615                           	psect	rparam
  3616  0000                     tosu	equ	0xFFF
  3617                           tosh	equ	0xFFE
  3618                           tosl	equ	0xFFD
  3619                           stkptr	equ	0xFFC
  3620                           pclatu	equ	0xFFB
  3621                           pclath	equ	0xFFA
  3622                           pcl	equ	0xFF9
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodh	equ	0xFF4
  3628                           prodl	equ	0xFF3
  3629                           indf0	equ	0xFEF
  3630                           postinc0	equ	0xFEE
  3631                           postdec0	equ	0xFED
  3632                           preinc0	equ	0xFEC
  3633                           plusw0	equ	0xFEB
  3634                           fsr0h	equ	0xFEA
  3635                           fsr0l	equ	0xFE9
  3636                           wreg	equ	0xFE8
  3637                           indf1	equ	0xFE7
  3638                           postinc1	equ	0xFE6
  3639                           postdec1	equ	0xFE5
  3640                           preinc1	equ	0xFE4
  3641                           plusw1	equ	0xFE3
  3642                           fsr1h	equ	0xFE2
  3643                           fsr1l	equ	0xFE1
  3644                           bsr	equ	0xFE0
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           preinc2	equ	0xFDC
  3649                           plusw2	equ	0xFDB
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      40
    BANK0           160      0     148
    BANK1           256      0      84
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    deplace@py	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(COMRAM[1]), 

    deplace@px	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _afficheTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18805
                                             33 COMRAM     3     3      0
                      _afficheTabVue
                             _demine
                            _deplace
                         _initTabVue
                     _initialisation
                    _lcd_curseurHome
                _lcd_effaceAffichage
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         13    11      2    2543
                                             20 COMRAM    13    11      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     7     7      0    3532
                                             22 COMRAM     7     7      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 16    12      4    1933
                                              6 COMRAM    16    12      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    1533
                                              6 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _deplace                                              9     5      4    1723
                                              5 COMRAM     9     5      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               6     5      1    5006
                                             12 COMRAM     6     5      1
                      _afficheTabVue
                 _enleveTuilesAutour
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1     348
                                              0 COMRAM    12    11      1
 ---------------------------------------------------------------------------------
 (2) _afficheTabVue                                        2     2      0    3202
                                              9 COMRAM     2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (3) _lcd_putMessage                                       3     1      2     555
                                              6 COMRAM     3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (4) _lcd_ecritChar                                        2     2      0     313
                                              3 COMRAM     2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1    1026
                                              3 COMRAM     2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1375
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabVue
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       ___wmul
       _lcd_effaceAffichage
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         ___wmul (ARG)
         _lcd_ecritChar (ARG)
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
   _initialisation
     _srand
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      54       6       32.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      94       4       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      28       1       42.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      14        0.0%
DATA                 0      0     110      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 09:59:25 2019

 __end_of_calculToucheCombien 7B82                            l80 724C                            l92 7662  
        ??_enleveTuilesAutour 0002           ___wmul@multiplicand 0003                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l112 77F0                           l104 7A3C  
                         l201 730C                           l210 703E                           l115 7A4E  
                         l204 706C                           l213 6FA6                           l133 7D3E  
                         l125 7B80                           l142 77F4                           l231 7438  
                         l207 73D2                           l119 7B26                           l152 7524  
                         l216 6F98                           l242 719E                           l146 7908  
                         l162 7006                           l139 7D3E                           l156 75B8  
                         l165 7016                           l261 72AA                           l190 6FC8  
                         l511 7712                           l264 6F90                           l248 7112  
                         l168 70A0                           l193 70A6                           l194 70D2  
                         l267 6FEE                           l187 6F88                           l195 70D8  
                         l278 7492                           l279 74A2                           l931 6FB4  
                         l934 71F0                  __CFG_CPB$OFF 000000                           u180 7014  
                         u181 7010                           u600 7A64                           u601 7A60  
                         u530 70D2                           u610 7A76                  __CFG_CPD$OFF 000000  
                         u531 70CE                           u611 7A72                           u540 72E8  
                         u700 7598                           u620 7A9C                           u541 72E4  
                         u701 7594                           u621 7A98                           u550 72FA  
                         u710 75B8                           u630 7AB8                           u551 72F6  
                         u711 75B4                           u631 7AB4                           u560 7112  
                         u800 761E                           u720 7294                           u640 7AC6  
                         u561 710E                           u801 761A                           u721 7290  
                         u641 7AC2                           u810 7662                           u730 72A6  
                         u650 7AE2                           u570 7458                           u811 765E  
                         u731 72A2                           u651 7ADE                           u571 7454  
                         u900 7BDC                           u660 7B24                           u740 7676  
                         u580 7492                           u820 7972                           u901 7BD8  
                         u661 7B20                           u741 7672                           u581 748E  
                         u821 796E                           u590 724C                           u910 7C22  
                         u670 7B46                           u750 7690                           u830 7992  
                         u591 7248                           u911 7C1E                           u671 7B42  
                         u751 768C                           u831 798E                           u920 7C44  
                         u680 7B66                           u760 76AA                           u840 79F6  
                         u921 7C40                           u681 7B62                           u761 76A6  
                         u841 79F2                           u930 7C8A                           u690 7B76  
                         u770 76C8                           u850 7A3C                           u931 7C86  
                         u691 7B72                           u771 76C4                           u851 7A38  
                         u940 7CAC                           u860 7766                           u780 76DE  
                         u941 7CA8                           u861 7762                           u781 76DA  
                         u950 7CF2                           u870 77D0                           u790 7702  
                         u951 7CEE                           u871 77CC                           u791 76FE  
                         u960 7D14                           u880 77F0                           u961 7D10  
                         u881 77EC                           u970 7802                           u890 7BBA  
                         u971 77FE                           u891 7BB6                           u980 7838  
                         u981 7834                           u990 7878                           u991 7874  
                __CFG_BORV$18 000000                  ___awmod@sign 0014                   lcd_gotoXY@x 0005  
                         wreg 000FE8                   lcd_gotoXY@y 0004  __size_of_lcd_effaceAffichage 000E  
                __CFG_LVP$OFF 000000                          l2000 7956                          l2010 79C4  
                        l2002 7972                          l2100 7886                          l2012 79F6  
                        l2004 7976                          l2102 78B6                          l2030 7724  
                        l2014 7A1A                          l2006 7992                          l2104 78FA  
                        l1240 7004                          l2040 77D4                          l2032 7766  
                        l2024 771C                          l2008 799E                          l2016 7A1E  
                        l2120 74AC                          l2106 78FE                          l1242 7014  
                        l2050 7BDC                          l2042 7B82                          l2034 77B0  
                        l2018 7714                          l2130 74C0                          l2122 74B0  
                        l1236 6FF2                          l2060 7C44                          l2052 7BE8  
                        l2044 7B9E                          l2036 77B4                          l2140 74FA  
                        l2132 74CC                          l2124 74B4                          l1238 7004  
                        l2070 7CAC                          l2062 7C50                          l2046 7BBA  
                        l2054 7C06                          l2038 77D0                          l2142 7508  
                        l2134 74D0                          l2126 74B8                          l2118 74A4  
                        l2080 7D14                          l2072 7CB8                          l2056 7C22  
                        l2064 7C6E                          l2048 7BC4                          l2136 74D4  
                        l2128 74BC                          l1610 70B8                          l1602 6FB8  
                        l2090 7806                          l2082 7D20                          l2066 7C8A  
                        l2074 7CD6                          l2058 7C2C                          l2138 74E8  
                        l1620 70C4                          l1612 70B8                          l1604 70A2  
                        l2092 7838                          l2084 77F4                          l2076 7CF2  
                        l2068 7C94                          l1622 70D4                          l1614 70BA  
                        l1606 70AA                          l1630 72B2                          l1710 73DA  
                        l1702 7180                          l2086 7802                          l2078 7CFC  
                        l1616 70C2                          l1608 70B6                          l1640 72C2  
                        l1632 72B6                          l1704 6F9A                          l1712 73E8  
                        l1720 7412                          l2096 7846                          l2088 7804  
                        l1800 7B46                          l1730 6FCA                          l1618 70C4  
                        l1626 6F8A                          l1650 72D8                          l1642 72C6  
                        l1634 72B6                          l1714 73F6                          l1722 70DA  
                        l2098 7878                          l1706 6F92                          l1810 7B7C  
                        l1802 7B4A                          l1732 6FE6                          l1660 7308  
                        l1652 72E8                          l1644 72C6                          l1636 72B8  
                        l1628 72AE                          l1716 7404                          l1708 73D6  
                        l1724 70E2                          l1804 7B66                          l1900 7664  
                        l1740 7458                          l1654 72FA                          l1646 72CC  
                        l1638 72BA                          l1670 704A                          l1726 70F4  
                        l1830 7578                          l1814 751C                          l1806 7B76  
                        l1910 7690                          l1902 7668                          l1742 7468  
                        l1656 7304                          l1648 72D0                          l1680 705A  
                        l1672 704C                          l1664 7042                          l1728 70F6  
                        l1760 7230                          l1832 757C                          l1816 7520  
                        l1840 7370                          l1920 76C8                          l1912 7698  
                        l1904 7676                          l1744 7472                          l1736 743A  
                        l1658 7308                          l1682 7060                          l1674 704E  
                        l1666 7046                          l1754 71FE                          l1746 71F2  
                        l1834 7598                          l1826 7528                          l1850 738C  
                        l1842 7374                          l1770 7A3E                          l1930 7702  
                        l1922 76DE                          l1914 76AA                          l1906 767E  
                        l1738 744A                          l1762 71A0                          l1684 7064  
                        l1676 7056                          l1668 704A                          l1692 7156  
                        l1756 7208                          l1748 71F6                          l1836 759C  
                        l1828 7534                          l1940 7080                          l1860 73AA  
                        l1852 7390                          l1844 7382                          l1772 7A4A  
                        l1932 770A                          l1924 76E6                          l1916 76B2  
                        l1908 7682                          l1764 71D4                          l1598 6F84  
                        l1686 7064                          l1678 705A                          l1694 7162  
                        l1758 722C                          l1838 6FA8                          l1950 7096  
                        l1942 7082                          l1870 73C6                          l1862 73B0  
                        l1854 7398                          l1846 7384                          l1790 7AB8  
                        l1782 7A52                          l1926 76EC                          l1918 76BA  
                        l1766 71E4                          l1688 7068                          l1696 716C  
                        l1960 75BA                          l1952 7098                          l1944 708E  
                        l1936 706E                          l1872 73CE                          l1864 73B4  
                        l1856 739E                          l1848 7386                          l1792 7AC6  
                        l1784 7A64                          l1928 76F2                          l1698 7176  
                        l1954 709C                          l1946 7090                          l1938 7076  
                        l1890 7282                          l1882 7258                          l1874 724E  
                        l1866 73BC                          l1858 73A2                          l1794 7AE2  
                        l1786 7A76                          l1980 7642                          l1972 75CA  
                        l1948 7092                          l1892 7284                          l1876 7254  
                        l1868 73C2                          l1956 7018                          l1796 7B24  
                        l1788 7A9C                          l1982 7646                          l1974 75FE  
                        l1966 75C2                          l1894 7294                          l1958 703A  
                        l1798 7B2A                          l1990 7916                          l1976 7602  
                        l1896 7296                          l1888 725C                          l1984 790A  
                        l1978 761E                          l1898 72A6                          l1996 791E  
                        l1998 7952                          u1000 78B6                          u1001 78B2  
                        u1020 7508                          u1021 7504                          u1107 72D2  
                        u1117 72FC                          u1047 74EE                          u1057 737A  
                        u1067 7392                          u1077 73A4                          u1087 73B6  
                        u1097 73C8                          _TMR1 000FCE              ??_initialisation 0003  
                        _main 74A4                          _rand 71A0                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 0007                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 0004  
                       ?_main 0001                         ?_rand 000D               __end_of___awmod 7714  
                       _ANSEL 000F7E                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 7D40           ___lmul@multiplicand 0005                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 0004                         _randx 0025                         _srand 6FA8  
                       main@x 0023                         main@y 0024                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000  
            _metToucheCombien 7714               __initialization 730E                  __end_of_main 751A  
                __end_of_rand 71F2           enleveTuilesAutour@i 0009           enleveTuilesAutour@j 000B  
         enleveTuilesAutour@x 0006           enleveTuilesAutour@y 0001          lcd_putMessage@chaine 0007  
  calculToucheCombien@colonne 0009                        ??_main 0022                        ??_rand 000F  
               __activetblptr 000002                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      ?_srand 0001                        _ANSELH 000F7F                   initTabVue@i 000B  
                 initTabVue@j 0009                __CFG_WDTEN$OFF 000000                  ?_rempliMines 0015  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 0006                lcd_initCGRam@j 0007  
              getAnalog@canal 0002              __end_of_lcd_busy 70DA              __end_of_lcd_init 7040  
                      ___lmul 743A                        ___wmul 6FCA                __CFG_STVREN$ON 000000  
                   ??___awmod 0013                        _demine 77F2                rempliMines@col 001C  
                      clear_0 7354                        clear_1 7360               ___awmod@divisor 0011  
                   ??_deplace 000A               ___awmod@counter 0013                  __pdataCOMRAM 0025  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 0001        __size_of_afficheTabVue 005C             _lcd_resetSequence 7370  
                  __accesstop 0060       __end_of__initialization 7366           _lcd_strobeEnableBit 6F8A  
          ?_lcd_resetSequence 0001                 ___rparam_used 000001                __pcstackCOMRAM 0001  
         _lcd_effaceAffichage 6F9A                  __pidataBANK0 7114           ??_lcd_resetSequence 0003  
     enleveTuilesAutour@ligne 0008                 __end_of_srand 6FB6          ?_lcd_strobeEnableBit 0001  
          __size_of_getAnalog 0028          ?_lcd_effaceAffichage 0001            __size_of_lcd_wrCom 0062  
   __end_of_lcd_resetSequence 73D4                       ??_srand 0003      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 6FB6                    __pbssBANK0 0060                    __pbssBANK1 0100  
            ??_lcd_putMessage 0009            ?_lcd_ecrireDonnees 0001      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 0001                       ?___lmul 0001                       ?___wmul 0001  
                     ?_demine 000D                 _afficheTabVue 71F2                ___lmul@product 0009  
 __size_of_enleveTuilesAutour 00A0         ??_lcd_strobeEnableBit 0001  __size_of_calculToucheCombien 0144  
    __end_of_metToucheCombien 77F2                    _lcd_gotoXY 73D4         ??_lcd_effaceAffichage 0004  
                  _lcd_wrData 7040     __end_of_lcd_ecrireDonnees 6FCA                     ?_lcd_busy 0001  
                   ?_lcd_init 0001       lcd_ecrireDonnees@donnee 0002                    _m_tabMines 0060  
           __end_of_getAnalog 7018          __size_of_rempliMines 0134                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 75BA             __end_of_lcd_wrCom 730E  
              ?_afficheTabVue 0001               __size_of___lmul 006A                       ___awmod 7664  
             __size_of___wmul 0026               __size_of_demine 0118                       __pcinit 730E  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 7B82  
                     __ptext0 74A4                       __ptext1 790A                       __ptext2 71A0  
                     __ptext3 743A                       __ptext4 7664                       __ptext5 7714  
                     __ptext6 7A3E                       __ptext7 7018                       __ptext8 7370  
                     __ptext9 724E         __end_of_lcd_ecritChar 71A0               lcd_busy@adresse 0002  
                   _T1CONbits 000FCD              ___awmod@dividend 000F                       demine@x 0012  
                     demine@y 000D              lcd_ecritChar@car 0004                    ??_lcd_busy 0001  
                  ??_lcd_init 0008    __size_of_lcd_resetSequence 0064          end_of_initialization 7366  
       __end_of_lcd_initCGRam 72AC                 __Lmediumconst 0000             ??_lcd_lireDonnees 0001  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initialisation 0034             ??_lcd_curseurHome 0004           lcd_ecritChar@posRam 0005  
                   _PORTAbits 000F80                     _PORTBbits 000F81                   ?_lcd_gotoXY 0004  
                 ?_lcd_wrData 0001    __size_of_lcd_ecrireDonnees 0014               ??_afficheTabVue 000A  
                 ?_initTabVue 0001                __end_of___lmul 74A4                __end_of___wmul 6FF0  
              __end_of_demine 790A                 __pidataCOMRAM 6F80           start_initialization 730E  
         _calculToucheCombien 7A3E           __size_of_lcd_gotoXY 0066                      ??___lmul 0009  
                    ??___wmul 0005                 rempliMines@nb 0015           __size_of_lcd_wrData 002E  
                    ??_demine 000E                   __pdataBANK0 00B4              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 0007             ?_metToucheCombien 0001           __size_of_initTabVue 00AA  
          ??_metToucheCombien 0017             __size_of_lcd_busy 0038             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 6FF0   __end_of_lcd_strobeEnableBit 6F92  
              _initialisation 706E    __end_of_enleveTuilesAutour 75BA                      ?___awmod 000F  
                    ?_deplace 0006   __end_of_lcd_effaceAffichage 6FA8                     _lcd_wrCom 72AC  
       ??_calculToucheCombien 000B     enleveTuilesAutour@colonne 0007               _lcd_lireDonnees 6F84  
         lcd_wrData@caractere 0003                __size_of_srand 000E                 ??_rempliMines 0017  
             _lcd_curseurHome 6F92                ___wmul@product 0005                     deplace@aX 000B  
                   deplace@aY 000D                     deplace@px 0006                     deplace@py 0008  
      __end_of_initialisation 70A2                    ?_getAnalog 0001              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 003A                    ?_lcd_wrCom 0001                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0001                  ??_lcd_gotoXY 0005  
                ??_lcd_wrData 0003             lcd_wrCom@commande 0003             ___lmul@multiplier 0001  
                   copy_data0 7322                     copy_data1 7342        __size_of_lcd_ecritChar 004C  
                    __Hrparam 0000               ?_initialisation 0001           __end_of_rempliMines 7A3E  
                    __Lrparam 0000                  ??_initTabVue 0007            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 001E                  rempliMines@j 0020            __end_of_lcd_gotoXY 743A  
          __end_of_lcd_wrData 706E              __size_of___awmod 00B0        __size_of_lcd_initCGRam 005E  
             lcd_putMessage@j 0009              __size_of_deplace 01BE       __end_of_lcd_lireDonnees 6F8A  
                    _matCGRAM 00B4       __end_of_lcd_curseurHome 6F9A                      __ptext10 6F92  
                    __ptext11 706E                      __ptext20 7154                      __ptext12 6FA8  
                    __ptext21 7040                      __ptext13 75BA                      __ptext22 73D4  
                    __ptext14 7B82                      __ptext23 6F9A                      __ptext15 6FF0  
                    __ptext24 72AC                      __ptext16 77F2                      __ptext25 6F8A  
                    __ptext17 751A                      __ptext26 6FB6                      __ptext18 71F2  
                    __ptext27 70A2                      __ptext19 70DA                      __ptext28 6F84  
                    __ptext29 6FCA             metToucheCombien@i 001A             metToucheCombien@j 001C  
                    _lcd_busy 70A2                      _lcd_init 7018            __end_of_initTabVue 7664  
            rempliMines@i_407 001A      calculToucheCombien@ligne 0007                      _m_tabVue 0100  
    calculToucheCombien@total 000E              rempliMines@ligne 001D                 __size_of_main 0076  
               __size_of_rand 0052                   ??_getAnalog 0001         __end_of_afficheTabVue 724E  
                 ??_lcd_wrCom 0003                 _lcd_ecritChar 7154                afficheTabVue@i 000A  
               _lcd_initCGRam 724E                   _rempliMines 790A          calculToucheCombien@i 0013  
        calculToucheCombien@j 0015          calculToucheCombien@x 000F          calculToucheCombien@y 0011  
   __size_of_metToucheCombien 00DE                _lcd_putMessage 70DA                ?_lcd_ecritChar 0001  
            ?_lcd_lireDonnees 0001            _enleveTuilesAutour 751A              ?_lcd_curseurHome 0001  
              ?_lcd_initCGRam 0001           ?_enleveTuilesAutour 0001             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 7114  
